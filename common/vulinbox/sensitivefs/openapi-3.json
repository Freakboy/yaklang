{
  "openapi": "3.0.1",
  "info": {
    "title": "KOLIBRI Cloud API OpenAPI 3 Specification",
    "description": "KOLIBRI Cloud API",
    "termsOfService": "https://docs.kolibricloud.ch/Nutzungsbedingungen_TermsAndConditions_KOLIBRI_Cloud.pdf",
    "contact": {
      "name": "KELLER Pressure",
      "url": "https://keller-druck.com",
      "email": "kolibri@keller-druck.com"
    },
    "version": "1.23.206.x"
  },
  "servers": [
    {
      "url": "https://apitest.kolibricloud.ch",
      "description": "Test"
    },
    {
      "url": "https://api.kolibricloud.ch",
      "description": ""
    }
  ],
  "paths": {
    "/v1/AdministrationSettings": {
      "get": {
        "tags": [
          "AdministrationSettings"
        ],
        "summary": "Gets the list of all referenced accounts (FTP/Mail) or an empty list",
        "description": "Gets the list of all referenced accounts (FTP/Mail) or an empty list",
        "operationId": "AdministrationSettings_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationSettingsModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdministrationSettings"
        ],
        "summary": "Updates the whole list of accounts. Normally, with ARCs this would be one FTP account.",
        "operationId": "AdministrationSettings_Update",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministrationSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministrationSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdministrationSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/AdministrationSettings/MailAccount": {
      "delete": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_DeleteMailAccount",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/AdministrationSettings/FtpAccount": {
      "delete": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_DeleteFtpAccount",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/AdministrationSettings/TestConnection": {
      "post": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_GetTestConnectionResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FtpCredentials"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FtpCredentials"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FtpCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/AdministrationSettings/Me": {
      "get": {
        "tags": [
          "AdministrationSettings"
        ],
        "summary": "Returns the own UserName, the own Role and the CustomerAdmin of the same group and Dialogs that should be shown to the user",
        "operationId": "AdministrationSettings_GetMeUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdministrationSettings"
        ],
        "summary": "Confirms that the user has seen (and confirmed) the dialog",
        "operationId": "AdministrationSettings_UpdateMeUser",
        "parameters": [
          {
            "name": "hasConfirmedWelcomeDialog",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasConfirmedFeatureDialog",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/AdministrationSettings/GroupUsers": {
      "get": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_GetGroupUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupUser"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_UpdateGroupUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupUser"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupUser"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupUser"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_AddNewUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/AdministrationSettings/LoRaDevices": {
      "post": {
        "tags": [
          "AdministrationSettings"
        ],
        "summary": "Try to add an existing LoRa device by its EUI such as \"009D6B0000AAD392\".\r\nIf the device is not already assigned to another customer then it is assigned to the customers group.",
        "operationId": "AdministrationSettings_AddNewLoRaDevice",
        "parameters": [
          {
            "name": "eui",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/AdministrationSettings/PermanentAccessToken": {
      "get": {
        "tags": [
          "AdministrationSettings"
        ],
        "operationId": "AdministrationSettings_GetPermanentAccessToken",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Alarms": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "operationId": "Alarms_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortAscending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Alarms/{alarmId}": {
      "put": {
        "tags": [
          "Alarms"
        ],
        "operationId": "Alarms_Update",
        "parameters": [
          {
            "name": "alarmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/AlarmSettings/{deviceId}": {
      "get": {
        "tags": [
          "AlarmSettings"
        ],
        "operationId": "AlarmSettings_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlarmSettingsViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlarmSettingsViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlarmSettingsViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/AlarmSettings/{alarmSettingsId}": {
      "put": {
        "tags": [
          "AlarmSettings"
        ],
        "operationId": "AlarmSettings_Update",
        "parameters": [
          {
            "name": "alarmSettingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/AlarmSettings": {
      "post": {
        "tags": [
          "AlarmSettings"
        ],
        "operationId": "AlarmSettings_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsPutPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/v1/AlarmSettings/{alarmId}": {
      "delete": {
        "tags": [
          "AlarmSettings"
        ],
        "operationId": "AlarmSettings_Delete",
        "parameters": [
          {
            "name": "alarmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/DeviceConfiguration/{deviceId}": {
      "get": {
        "tags": [
          "DeviceConfiguration"
        ],
        "operationId": "DeviceConfiguration_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigurationsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigurationsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigurationsViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeviceConfiguration"
        ],
        "operationId": "DeviceConfiguration_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigurationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigurationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigurationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets information of all devices.\r\nSee https://docs.kolibricloud.ch/cloud-interfaces/api/access_details/",
        "operationId": "Devices_Get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "OPTIONAL. Skips the given number of devices. The opposite of Take.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "OPTIONAL. Takes only the first .. devices. The opposite of Skip. When not specified the API replies with the first 50 devices.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "OPTIONAL. Text term to filter all devices. Only the devices with searchText in the name or network",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "OPTIONAL. Default it is sort by the device’s \"Name\". It is also possible to sort for \"NetworkNode\", \"TransferType\", \"GsmNumber\", \"EuiNumber\", \"SerialNumber\"",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sortAscending",
            "in": "query",
            "description": "OPTIONAL. If False then the list of the devices is ordered in descending order.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns json data about a specific accessible device.\r\nSee https://docs.kolibricloud.ch/cloud-interfaces/api/access_details/",
        "operationId": "Devices_GetDeviceDetails",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "REQUIRED. Every device has an 4 digit id number. The deviceId is the same number that can be seen in the URL of the WebApp when the device is selected: https://www.kolibricloud.ch/devices/1234/",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/BatteryInfos": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetBatteryInfos",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryValuesListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryValuesListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryValuesListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/SignalQualityInfos": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetSignalQualityInfos",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/HumidityInfos": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetHumidityInfosInfos",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValuesListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/Location": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetLocationInfos",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PostLocationCoordinates",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/SelectedChannels": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetSelectedChannels",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectedChannelsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectedChannelsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectedChannelsViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PutSelectedChannels",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectedChannelsPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectedChannelsPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SelectedChannelsPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/CustomizedChannels": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetCustomizedChannels",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomizedChannel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomizedChannel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomizedChannel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_CreateCustomizedChannel",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannelPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannelPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannelPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/CustomizedChannels/{id}": {
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_UpdateCustomizedChannel",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizedChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_DeleteCustomizedChannel",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/DeviceLogs": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetDeviceLogs",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceLogGetModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceLogGetModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceLogGetModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/HideData": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PostHideData",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/RestoreData": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PostRestoreData",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/Move": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PostMoveDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/Replace": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_PostReplaceDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newDeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/Delete": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Hides the device by null-ing of TenantId and changing SerialNumber",
        "operationId": "Devices_PostHideDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/RequestConfiguration": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Send down a 'void' configuration that triggers the sending of an actual configuration from the device.\r\nText-content: \"#E/e\"",
        "operationId": "Devices_PostRequestConfiguration",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/RequestMissingMeasurements": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Produces a text file with the request to send missing measurement data\r\nSee chapter 1.2.3.1 of the Cellular Protocol.\r\nExample: Requesting data from 21.3.2021 - 24.3.2021 : \"#e/a=669600000/b=669859200#E/e\"\r\nBe aware: The amount of data a device can send is limited. It will start with the oldest time and sends as much a needed or possible.",
        "operationId": "Devices_PostRequestMissingMeasurements",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "UTC datetime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "UTC datetime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Devices/{deviceId}/ChangeDeviceTime": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Produces a text file with the request to change the device time\r\nSee chapter 1.2.3.1 of the Cellular Protocol.\r\nExample: Changing the datetime of the device 2 days into the future is this: \"#e/t=+172800#E/e\"\r\nExample: Subtracts 10min from the Device time: \"#e/t=-600#E/e\"\r\nBe aware: When changing the device's time, the measurement gathering will be stopped and re-starts with the new time. In this process you might loose unsent data.\r\nBe aware: +/- 2 days is the max time span to be able to change. It is possible to send this request multiple times  ... with the according risk.",
        "operationId": "Devices_PostRequestChangeDeviceTime",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeDifferenceInSeconds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Export": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Gets the export file with calculated measurements",
        "operationId": "Export_GetExport",
        "parameters": [
          {
            "name": "deviceIds",
            "in": "query",
            "description": "The devices filter for the export file.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The from date time filter for the export file. Must be UTC in format .",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date time filter for the export file. Must be UTC.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "measurementDefinitionIds",
            "in": "query",
            "description": "The measurement definition ids to be filtered for the export file.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "exportFileType",
            "in": "query",
            "description": "The export file type. Use 0 for CSV, 1 for Excel, 2 for Zip, 4 for Hydras, 5 for AquaInfo, 6 for KOLIBRI JSON.",
            "schema": {
              "$ref": "#/components/schemas/Filetype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Export/Report": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Gets the export file with calculated measurements",
        "operationId": "Export_GetReport",
        "parameters": [
          {
            "name": "deviceIds",
            "in": "query",
            "description": "The devices filter for the export file.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The from date time filter for the export file. Must be UTC in format .",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date time filter for the export file. Must be UTC.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "measurementDefinitionIds",
            "in": "query",
            "description": "The measurement definition ids to be filtered for the export file.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "exportFileType",
            "in": "query",
            "description": "The export file type. Use 3 for DOCX or 9 for PDF",
            "schema": {
              "$ref": "#/components/schemas/Filetype"
            }
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "Use 0 for FlowReport",
            "schema": {
              "$ref": "#/components/schemas/ReportType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Favorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "operationId": "Favorites_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteListViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Favorites"
        ],
        "operationId": "Favorites_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Favorites/{favoriteId}": {
      "put": {
        "tags": [
          "Favorites"
        ],
        "operationId": "Favorites_Put",
        "parameters": [
          {
            "name": "favoriteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePutPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Favorites"
        ],
        "operationId": "Favorites_Delete",
        "parameters": [
          {
            "name": "favoriteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/FlowCalculationSettings/{deviceId}": {
      "get": {
        "tags": [
          "FlowCalculationSettings"
        ],
        "operationId": "FlowCalculationSettings_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FlowCalculationSettings"
        ],
        "summary": "Sends down 1..3 FlowCalculationSettings that needs to be updated",
        "operationId": "FlowCalculationSettings_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowCalculationSettingsGetPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Measurements": {
      "get": {
        "tags": [
          "Measurements"
        ],
        "operationId": "Measurements_Get",
        "parameters": [
          {
            "name": "measurementDefinitionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "isFiltered",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ianaTimeZone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementValuesListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementValuesListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementValuesListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Measurements/LastMeasurement/{deviceId}": {
      "get": {
        "tags": [
          "Measurements"
        ],
        "operationId": "Measurements_GetLastData",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Measurements/LastMeasurement": {
      "get": {
        "tags": [
          "Measurements"
        ],
        "operationId": "Measurements_GetAllLastData",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementsAndDeviceIdViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementsAndDeviceIdViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementsAndDeviceIdViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/MultiSensorCalculationSettings/WithHistory/{deviceId}": {
      "get": {
        "tags": [
          "MultiSensorCalculationSettings"
        ],
        "operationId": "MultiSensorCalculationSettings_GetWithHistoryFlat",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MultiSensorCalculationSettings"
        ],
        "summary": "Updates only one list of settings from one of the 5 sensors.\r\nThis list is normally filled with 1 setting. When it has more than the ones with filled From/TO are history-settings",
        "operationId": "MultiSensorCalculationSettings_UpdateWithHistory",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/MultiSensorCalculationSettings/{deviceId}": {
      "get": {
        "tags": [
          "MultiSensorCalculationSettings"
        ],
        "operationId": "MultiSensorCalculationSettings_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MultiSensorCalculationSettings"
        ],
        "operationId": "MultiSensorCalculationSettings_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MultiSensorCalculationSettingsViewModelOld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/PageSettings": {
      "get": {
        "tags": [
          "PageSettings"
        ],
        "operationId": "PageSettings_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PageSettingsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageSettingsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PageSettings"
        ],
        "operationId": "PageSettings_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/v1/PageSettings/{pageSettingsId}": {
      "put": {
        "tags": [
          "PageSettings"
        ],
        "operationId": "PageSettings_Update",
        "parameters": [
          {
            "name": "pageSettingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PageSettingsPostPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Gets the assigned roles of the actually authenticated user.",
        "operationId": "Roles_GetUserRoles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/TankCalculationSettings/{deviceId}": {
      "get": {
        "tags": [
          "TankCalculationSettings"
        ],
        "operationId": "TankCalculationSettings_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TankCalculationSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TankCalculationSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TankCalculationSettingsModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TankCalculationSettings"
        ],
        "operationId": "TankCalculationSettings_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TankCalculationSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TankCalculationSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TankCalculationSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/Units": {
      "get": {
        "tags": [
          "Units"
        ],
        "operationId": "Units_Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitListViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitListViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitListViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/WaterCalculationSettings/{deviceId}": {
      "get": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_Get",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_Update",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/WaterCalculationSettings/WithLevelLines/{deviceId}": {
      "get": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_GetWithLevelLines",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesViewModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_UpdateWithLevelLines",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/WaterCalculationSettings/WithHistory/{deviceId}": {
      "get": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_GetWithLevelLinesAndHistory",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryViewMode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryViewMode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryViewMode"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WaterCalculationSettings"
        ],
        "operationId": "WaterCalculationSettings_UpdateWithLevelLinesAndHistory",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryPutModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryPutModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesAndHistoryPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdministrationSettingsModel": {
        "type": "object",
        "properties": {
          "generalAlarmMailReceiversCommaSeparated": {
            "type": "string",
            "description": "List of mail addresses of recipients of alarm mails triggered by a troublesome system state",
            "nullable": true
          },
          "ftpMailAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FtpMailAccounts"
            },
            "description": "List of FTP or MAIL accounts that belong to the same Tenant.\r\nNormally, with ARCs, there should be one FTP account.\r\nLoRa devices or groups without dedicated account return a empty list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Like AdministrationSettings but without ID and Tenant"
      },
      "AlarmListViewModel": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "description": "Count of all alarms that are filtered. Is used by frontend to calculate \"table\" Take/Skip values",
            "format": "int32"
          },
          "totalActiveApplicationAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "totalActiveDeviceAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "totalActiveSystemAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnconfirmedApplicationAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnconfirmedDeviceAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnconfirmedSystemAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "alarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlarmViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlarmPutModel": {
        "required": [
          "alarmState"
        ],
        "type": "object",
        "properties": {
          "alarmState": {
            "minLength": 1,
            "type": "string"
          },
          "confirmingUserName": {
            "type": "string",
            "nullable": true
          },
          "confirmingDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmingNote": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlarmSettingsPutPostModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddressesCommaSeparated": {
            "type": "string",
            "nullable": true
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "waterCalculationId": {
            "type": "integer",
            "description": "For Water Calculation it is needed to have a link to the Water Calculation that can be one from the past (not the actual one)",
            "format": "int32",
            "nullable": true
          },
          "valueUnitId": {
            "type": "integer",
            "description": "Unused for now.\r\nMight be needed to calculate the Value into/fromto the user specific unit.\r\nMaybe the UnitId from MeasurementDefinition can be taken",
            "format": "int32",
            "nullable": true
          },
          "sendAlarmOffMessage": {
            "type": "boolean",
            "description": "When an Alarm does not anymore fullfill the alarm condition than the user might want to be notified",
            "nullable": true
          },
          "repeatingAlarmMaxCount": {
            "type": "integer",
            "description": "Not used right now.",
            "format": "int32",
            "nullable": true
          },
          "repeatingAlarmResendTimeSpanInHours": {
            "type": "integer",
            "description": "Not used right now.",
            "format": "int32",
            "nullable": true
          },
          "levelAlarmIsHigher": {
            "type": "boolean",
            "description": "True (1) : In LevelAlarm, when the Alarm is triggered when the actual value is HIGHER than the \"LevelAlarmValue\"\r\nFalse(0) : In LevelAlarm, when the Alarm is triggered when the actual value is LOWER  than the \"LevelAlarmValue\"",
            "nullable": true
          },
          "levelAlarmValue": {
            "type": "number",
            "description": "Used by LevelAlarm (level value)",
            "format": "double",
            "nullable": true
          },
          "levelAlarmHysteresisValue": {
            "type": "number",
            "description": "Used by LevelAlarm: After triggering an alarm it might go into a state where multiple alarms are\r\ntriggered because the level swings back and forth just crossing the alarm level.\r\nThis value is a buffer to limit the alarm trigger.",
            "format": "double",
            "nullable": true
          },
          "deltaTimeAlarmTimeSpanInMinutes": {
            "type": "integer",
            "description": "In DeltaTimeAlarms, when the choosen \"Channel\"-difference during DeltaTimeAlarmTimeSpanInMinutes\r\nis bigger than the DeltaAlarmDifferenceValue",
            "format": "int32",
            "nullable": true
          },
          "deltaAlarmDifferenceValue": {
            "type": "number",
            "description": "Used by DeltaAlarm (difference value)",
            "format": "double",
            "nullable": true
          },
          "alternativeAlarmOnMailSubjectText": {
            "type": "string",
            "description": "Alternative Subject-Text to be used in a Alarm-ON-Mail\r\nmax 100 chars",
            "nullable": true
          },
          "alternativeAlarmOnMailBodyText": {
            "type": "string",
            "description": "Alternative Body-Text to be used in a Alarm-ON-Mail\r\nmax 2000 chars",
            "nullable": true
          },
          "alternativeAlarmOffMailSubjectText": {
            "type": "string",
            "description": "Alternative Subject-Text to be used in a Alarm-OFF-Mail\r\nmax 100 chars",
            "nullable": true
          },
          "alternativeAlarmOffMailBodyText": {
            "type": "string",
            "description": "Alternative Body-Text to be used in a Alarm-OFF-Mail\r\nmax 2000 chars",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlarmSettingsViewModel": {
        "type": "object",
        "properties": {
          "alarmSettingId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddressesCommaSeparated": {
            "type": "string",
            "nullable": true
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "waterCalculationId": {
            "type": "integer",
            "description": "For Water Calculation it is needed to have a link to the Water Calculation that can be one from the past (not the actual one)",
            "format": "int32",
            "nullable": true
          },
          "valueUnitId": {
            "type": "integer",
            "description": "Unused for now.\r\nMight be needed to calculate the Value into/fromto the user specific unit.\r\nMaybe the UnitId from MeasurementDefinition can be taken",
            "format": "int32",
            "nullable": true
          },
          "sendAlarmOffMessage": {
            "type": "boolean",
            "description": "When an Alarm does not anymore fulfill the alarm condition than the user might want to be notified",
            "nullable": true
          },
          "repeatingAlarmMaxCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repeatingAlarmResendTimeSpanInHours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelAlarmIsHigher": {
            "type": "boolean",
            "description": "True (1) : In LevelAlarm, when the Alarm is triggered when the actual value is HIGHER than the \"LevelAlarmValue\"\r\nFalse(0) : In LevelAlarm, when the Alarm is triggered when the actual value is LOWER  than the \"LevelAlarmValue\"",
            "nullable": true
          },
          "levelAlarmValue": {
            "type": "number",
            "description": "Used by LevelAlarm (level value)",
            "format": "double",
            "nullable": true
          },
          "levelAlarmHysteresisValue": {
            "type": "number",
            "description": "Used by LevelAlarm: After triggering an alarm it might go into a state where multiple alarms are\r\ntriggered because the level swings back and forth just crossing the alarm level.\r\nThis value is a buffer to limit the alarm trigger.",
            "format": "double",
            "nullable": true
          },
          "deltaTimeAlarmTimeSpanInMinutes": {
            "type": "integer",
            "description": "In DeltaTimeAlarms, when the choosen \"Channel\"-difference during DeltaTimeAlarmTimeSpanInMinutes\r\nis bigger than the DeltaAlarmDifferenceValue",
            "format": "int32",
            "nullable": true
          },
          "deltaAlarmDifferenceValue": {
            "type": "number",
            "description": "Used by DeltaAlarm (difference value)",
            "format": "double",
            "nullable": true
          },
          "isAlarmStateOn": {
            "type": "boolean",
            "description": "When true the alarm state of the device with this alarm setting is ON"
          },
          "alternativeAlarmOnMailSubjectText": {
            "type": "string",
            "description": "Alternative Subject-Text to be used in a Alarm-ON-Mail\r\nmax 100 chars",
            "nullable": true
          },
          "alternativeAlarmOnMailBodyText": {
            "type": "string",
            "description": "Alternative Body-Text to be used in a Alarm-ON-Mail\r\nmax 2000 chars",
            "nullable": true
          },
          "alternativeAlarmOffMailSubjectText": {
            "type": "string",
            "description": "Alternative Subject-Text to be used in a Alarm-OFF-Mail\r\nmax 100 chars",
            "nullable": true
          },
          "alternativeAlarmOffMailBodyText": {
            "type": "string",
            "description": "Alternative Body-Text to be used in a Alarm-OFF-Mail\r\nmax 2000 chars",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlarmUserAlertViewModel": {
        "type": "object",
        "properties": {
          "sendTime": {
            "type": "string",
            "format": "date-time"
          },
          "emailAddressesCommaSeparated": {
            "type": "string",
            "nullable": true
          },
          "smsNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlarmViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "alarmState": {
            "type": "string",
            "description": "Active (0) This alarm is active\r\nConfirmed (1) This alarm is active but has been manually confirmed (LevelON/LevelOFF alarms)\r\nAlarmOff  (2) This alarm has a state where it is not active anymore\r\nAlarmOffAndConfirmed (3) This alarm's alarm-value is OK again. It has been manually confirmed (LevelON/LevelOFF alarms) and automatically confirmed because the value is OK again (Device alarms)",
            "nullable": true
          },
          "alarmType": {
            "type": "string",
            "nullable": true
          },
          "alarmSource": {
            "type": "string",
            "nullable": true
          },
          "alarmCategory": {
            "type": "string",
            "nullable": true
          },
          "alarmValue": {
            "type": "number",
            "format": "double"
          },
          "alarmPeriod": {
            "type": "string",
            "nullable": true
          },
          "networkNode": {
            "type": "string",
            "nullable": true
          },
          "transferType": {
            "type": "string",
            "nullable": true
          },
          "firstAlarmTime": {
            "type": "string",
            "format": "date-time"
          },
          "alarmOffTime": {
            "type": "string",
            "format": "date-time"
          },
          "alarmOffValue": {
            "type": "number",
            "format": "double"
          },
          "alarmUserAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlarmUserAlertViewModel"
            },
            "nullable": true
          },
          "confirmingUserName": {
            "type": "string",
            "nullable": true
          },
          "confirmingTime": {
            "type": "string",
            "format": "date-time"
          },
          "confirmingNote": {
            "type": "string",
            "nullable": true
          },
          "alarmSettingsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAlarmSettingsActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatteryValuesListViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "calculatedBatteryCapacityValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleMeasurementPair"
            },
            "nullable": true
          },
          "calculatedBatteryCapacityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "measuredBatteryVoltageValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleMeasurementPair"
            },
            "nullable": true
          },
          "measuredBatteryVoltageUnitId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomizedChannel": {
        "required": [
          "deviceId",
          "measurementDefinitionId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "alternativeName": {
            "type": "string",
            "nullable": true
          },
          "colorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomizedChannelPostModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "alternativeName": {
            "type": "string",
            "nullable": true
          },
          "colorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Like the entity CustomizedChannel but without the Id"
      },
      "DepthCalculationSettingsViewModel": {
        "type": "object",
        "properties": {
          "calculationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "b": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceConfigurationModel": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "type": "string",
            "description": "Indicate if it was sent from the WebApp or manually through GSMSetup/GSMDatamanager\r\nThe ACK Id is either a number (Sent from the API) which is smaller than 65000 (Id%65000==Ack-Id) or it is 0 (Sent from GSMSetup/Datamanager)",
            "format": "date-time",
            "nullable": true
          },
          "lockTimerMeasurement": {
            "type": "boolean",
            "description": "SHOULD ALWAYS BE ON\r\n#c/x (read only) AND #c/y (write only), Bit Position 0",
            "nullable": true
          },
          "lockTimerAlarm": {
            "type": "boolean",
            "description": "#c/x (read only) AND #c/y (write only), Bit Position 1",
            "nullable": true
          },
          "lockTimerInfo": {
            "type": "boolean",
            "description": "#c/x (read only) AND #c/y (write only), Bit Position 2",
            "nullable": true
          },
          "lockTimerCheck": {
            "type": "boolean",
            "description": "SHOULD ALWAYS BE ON \r\n#c/x (write only) AND #c/y (read only), Bit Position 3",
            "nullable": true
          },
          "lockTimerDial": {
            "type": "boolean",
            "description": "SHOULD ALWAYS BE OFF\r\n#c/x (read only) AND #c/y (write only), Bit Position 4",
            "nullable": true
          },
          "generalNetworkName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/r",
            "nullable": true
          },
          "generalOwnTelNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/s",
            "nullable": true
          },
          "generalLocationName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/t",
            "nullable": true
          },
          "generalLocationAddressText": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "generalGsmSerialNumber": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "#I/n",
            "nullable": true
          },
          "generalGsmSoftwareVersion": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "#I/f",
            "nullable": true
          },
          "generalLongitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/0",
            "nullable": true
          },
          "generalLatitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/1",
            "nullable": true
          },
          "generalAltitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/2",
            "nullable": true
          },
          "generalGpsLongitude": {
            "type": "number",
            "description": "#d/0",
            "format": "double",
            "nullable": true
          },
          "generalGpsLatitude": {
            "type": "number",
            "description": "#d/1",
            "format": "double",
            "nullable": true
          },
          "generalGpsAltitude": {
            "type": "number",
            "description": "#d/2",
            "format": "double",
            "nullable": true
          },
          "generalCellLocateLongitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/3, Readonly, recalibracte with #e/l",
            "nullable": true
          },
          "generalCellLocateLatitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/4, Readonly, recalibracte with #e/l",
            "nullable": true
          },
          "generalCellLocateAltitudeText": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "#b/5, Readonly, recalibracte with #e/l",
            "nullable": true
          },
          "hardwareConnectionType": {
            "type": "integer",
            "description": "#c/6",
            "format": "int32",
            "nullable": true
          },
          "hardwarePowerExternalDevice": {
            "type": "integer",
            "description": "#c/4, 0 = Deactivated | 1 = +12V | 2 = +5V | 3 = +3.9V | 4 = all On",
            "format": "int32",
            "nullable": true
          },
          "hardwareMeasureSaveChannel0": {
            "type": "boolean",
            "description": "#c/m, Bit Position 0",
            "nullable": true
          },
          "hardwareMeasureSaveChannel1": {
            "type": "boolean",
            "description": "#c/m, Bit Position 1",
            "nullable": true
          },
          "hardwareMeasureSaveChannel2": {
            "type": "boolean",
            "description": "#c/m, Bit Position 2",
            "nullable": true
          },
          "hardwareMeasureSaveChannel3": {
            "type": "boolean",
            "description": "#c/m, Bit Position 3",
            "nullable": true
          },
          "hardwareMeasureSaveChannel4": {
            "type": "boolean",
            "description": "#c/m, Bit Position 4",
            "nullable": true
          },
          "hardwareMeasureSaveChannel5": {
            "type": "boolean",
            "description": "#c/m, Bit Position 5",
            "nullable": true
          },
          "hardwareMeasureSaveChannel6": {
            "type": "boolean",
            "description": "#c/m, Bit Position 6",
            "nullable": true
          },
          "hardwareMeasureSaveChannel7": {
            "type": "boolean",
            "description": "#c/m, Bit Position 7",
            "nullable": true
          },
          "hardwareMeasureSaveChannel8": {
            "type": "boolean",
            "description": "#c/p, Bit Position 0",
            "nullable": true
          },
          "hardwareMeasureSaveChannel9": {
            "type": "boolean",
            "description": "#c/p, Bit Position 1",
            "nullable": true
          },
          "hardwareMeasureSaveChannel10": {
            "type": "boolean",
            "description": "#c/p, Bit Position 2",
            "nullable": true
          },
          "hardwareMeasureSaveChannel11": {
            "type": "boolean",
            "description": "#c/p, Bit Position 3",
            "nullable": true
          },
          "hardwareMeasureSaveChannel12": {
            "type": "boolean",
            "description": "#c/p, Bit Position 4",
            "nullable": true
          },
          "hardwareMeasureSaveChannel13": {
            "type": "boolean",
            "description": "#c/p, Bit Position 5",
            "nullable": true
          },
          "hardwareMeasureSaveChannel14": {
            "type": "boolean",
            "description": "#c/p, Bit Position 6",
            "nullable": true
          },
          "hardwareMeasureSaveChannel15": {
            "type": "boolean",
            "description": "#c/p, Bit Position 7",
            "nullable": true
          },
          "hardwareDataConnectionTimer": {
            "type": "integer",
            "description": "#c/e, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "hardwareDataConnectionInterval": {
            "type": "integer",
            "description": "#c/k, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "hardwareSupportedSensorTypes": {
            "type": "integer",
            "description": "#c/5",
            "format": "int32",
            "nullable": true
          },
          "hardwarePreOnTime": {
            "type": "integer",
            "description": "#f/3, min = 0 | max = 254",
            "format": "int32",
            "nullable": true
          },
          "hardwareMultiplierPressureChannels": {
            "type": "number",
            "description": "#d/g, SMS only",
            "format": "double",
            "nullable": true
          },
          "hardwareMultiplierTemperatureChannels": {
            "type": "number",
            "description": "#d/f, SMS only",
            "format": "double",
            "nullable": true
          },
          "hardwareResolutionPressureChannels": {
            "type": "integer",
            "description": "#c/v, SMS only",
            "format": "int32",
            "nullable": true
          },
          "hardwareResolutionTemperatureChannels": {
            "type": "integer",
            "description": "#c/w, SMS only",
            "format": "int32",
            "nullable": true
          },
          "hardwareDataConnectionCallNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/k",
            "nullable": true
          },
          "measurementTimer": {
            "type": "integer",
            "description": "#c/a, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "measurementInterval": {
            "type": "integer",
            "description": "#c/g, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "measurementSendSms": {
            "type": "boolean",
            "description": "#c/z, Bit Position 0",
            "nullable": true
          },
          "measurementSendMail": {
            "type": "boolean",
            "description": "#c/z, Bit Position 4",
            "nullable": true
          },
          "measurementSendFTP": {
            "type": "boolean",
            "description": "#f/z, Bit Position 0\r\nLETS NOT DO THIS ANYMORE FOR KOLIBRI",
            "nullable": true
          },
          "measurementMailAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#b/a",
            "nullable": true
          },
          "measurementSmsNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/m",
            "nullable": true
          },
          "measurementSmsText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "#b/u",
            "nullable": true
          },
          "measurementSendMailAfterX": {
            "type": "integer",
            "description": "#c/q",
            "format": "int32",
            "nullable": true
          },
          "measurementSendSmsAfterX": {
            "type": "integer",
            "description": "#c/o",
            "format": "int32",
            "nullable": true
          },
          "measurementSendFtpAfterX": {
            "type": "integer",
            "description": "#f/q\r\nLETS NOT DO THIS ANYMORE FOR KOLIBRI",
            "format": "int32",
            "nullable": true
          },
          "gprsAPN": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/a",
            "nullable": true
          },
          "gprsID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/b",
            "nullable": true
          },
          "gprsPassword": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/c",
            "nullable": true
          },
          "gprsDNS": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/d",
            "nullable": true
          },
          "gprsSimPin": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "#b/j",
            "nullable": true
          },
          "gprsSmsServiceCenterNr": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/q",
            "nullable": true
          },
          "gprsPasswordForQuerySms": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "#b/g",
            "nullable": true
          },
          "gprsModemProtocol": {
            "type": "integer",
            "description": "#c/0, 0 = 9600bps (V.32) | 1 = 9600bps (V.34) | 2 = 9600bps (V.110)",
            "format": "int32",
            "nullable": true
          },
          "cellularModuleId": {
            "type": "string",
            "description": "#a/o",
            "nullable": true
          },
          "cellularModuleRevisionId": {
            "type": "string",
            "description": "#a/p",
            "nullable": true
          },
          "cellularModuleSerialNumberIMEI": {
            "type": "string",
            "description": "#a/q",
            "nullable": true
          },
          "cellularSIMCardId": {
            "type": "string",
            "description": "#a/r",
            "nullable": true
          },
          "cellularSIMCardSubscriberId": {
            "type": "string",
            "description": "#a/s",
            "nullable": true
          },
          "ftpServerName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#k/a",
            "nullable": true
          },
          "ftpServerPath": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#k/h",
            "nullable": true
          },
          "ftpUsername": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#k/b",
            "nullable": true
          },
          "ftpAccount": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#k/d",
            "nullable": true
          },
          "ftpPassword": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#k/c",
            "nullable": true
          },
          "ftpPort": {
            "type": "integer",
            "description": "#k/f, min = 0 | max = 65535",
            "format": "int32",
            "nullable": true
          },
          "ftpUseTLS": {
            "type": "boolean",
            "description": "#c/A",
            "nullable": true
          },
          "ftpSourceControlPort": {
            "type": "integer",
            "description": "#k/e, min = 0 | max = 65535",
            "format": "int32",
            "nullable": true
          },
          "ftpSourceDataPort": {
            "type": "integer",
            "description": "#k/g, min = 0 | max = 65535",
            "format": "int32",
            "nullable": true
          },
          "ftpUseActiveMode": {
            "type": "boolean",
            "description": "#c/B",
            "nullable": true
          },
          "mailSmtpShowedName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/e",
            "nullable": true
          },
          "mailPop3Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/f",
            "nullable": true
          },
          "mailPop3Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/g",
            "nullable": true
          },
          "mailSmtpUseSSL": {
            "type": "boolean",
            "description": "#c/1, Bit Position 0",
            "nullable": true
          },
          "mailPop3UseSSL": {
            "type": "boolean",
            "description": "#c/1, Bit Position 1",
            "nullable": true
          },
          "mailUseAlternativeSMTPLogin": {
            "type": "boolean",
            "description": "#c/2",
            "nullable": true
          },
          "mailReturnAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/n",
            "nullable": true
          },
          "mailOptSmtpUsername": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/h",
            "nullable": true
          },
          "mailOptSmtpPassword": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/i",
            "nullable": true
          },
          "mailSmtpServer": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/l",
            "nullable": true
          },
          "mailSmtpPort": {
            "type": "integer",
            "description": "#a/m, min = 0 | max = 65535",
            "format": "int32",
            "nullable": true
          },
          "mailPop3Server": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#a/j",
            "nullable": true
          },
          "mailPop3Port": {
            "type": "integer",
            "description": "#a/k, min = 0 | max = 65535",
            "format": "int32",
            "nullable": true
          },
          "infoTimer": {
            "type": "integer",
            "description": "#c/c, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "infoInterval": {
            "type": "integer",
            "description": "#c/i, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "infoSendSms": {
            "type": "boolean",
            "description": "#c/z, Bit Position 2",
            "nullable": true
          },
          "infoSendMail": {
            "type": "boolean",
            "description": "#c/z, Bit Position 6",
            "nullable": true
          },
          "infoSendFTP": {
            "type": "boolean",
            "description": "#f/z, Bit Position 2",
            "nullable": true
          },
          "infoMailAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#b/c",
            "nullable": true
          },
          "infoSmsNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/o",
            "nullable": true
          },
          "checkTimer": {
            "type": "integer",
            "description": "#c/d, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "checkInterval": {
            "type": "integer",
            "description": "#c/j, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "checkSendSms": {
            "type": "boolean",
            "description": "#c/z, Bit Position 3",
            "nullable": true
          },
          "checkSendMail": {
            "type": "boolean",
            "description": "#c/z, Bit Position 7",
            "nullable": true
          },
          "checkSendFTP": {
            "type": "boolean",
            "description": "#f/z, Bit Position 3",
            "nullable": true
          },
          "checkAnswerSmsText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "#b/w",
            "nullable": true
          },
          "alarmTimer": {
            "type": "integer",
            "description": "#c/b, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "alarmInterval": {
            "type": "integer",
            "description": "#c/h, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "alarmSendSms": {
            "type": "boolean",
            "description": "#c/z, Bit Position 1",
            "nullable": true
          },
          "alarmSendMail": {
            "type": "boolean",
            "description": "#c/z, Bit Position 5",
            "nullable": true
          },
          "alarmSendFTP": {
            "type": "boolean",
            "description": "#f/z, Bit Position 1",
            "nullable": true
          },
          "alarmMailAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "#b/b",
            "nullable": true
          },
          "alarmSmsNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "#b/n",
            "nullable": true
          },
          "alarmSmsText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "#b/v",
            "nullable": true
          },
          "alarmSendXTimes": {
            "type": "integer",
            "description": "#c/t",
            "format": "int32",
            "nullable": true
          },
          "alarmType": {
            "type": "integer",
            "description": "#c/s, 1 = On / Off | 2 = Delta | 3 = Digital Input",
            "format": "int32",
            "nullable": true
          },
          "alarmChannelNumber": {
            "type": "integer",
            "description": "#c/r",
            "format": "int32",
            "nullable": true
          },
          "alarmOnThreshold": {
            "type": "number",
            "description": "#d/a",
            "format": "double",
            "nullable": true
          },
          "alarmOffThreshold": {
            "type": "number",
            "description": "#d/b",
            "format": "double",
            "nullable": true
          },
          "alarmDeltaThreshold": {
            "type": "number",
            "description": "#d/c",
            "format": "double",
            "nullable": true
          },
          "eventType": {
            "type": "integer",
            "description": "#f/n, 0 = deactivated | 1 = activated | 2 = On / Off | 3 = Delta",
            "format": "int32",
            "nullable": true
          },
          "eventMeasureTimer": {
            "type": "integer",
            "description": "#f/a, min = 0 | max = 5184000",
            "format": "int32",
            "nullable": true
          },
          "eventCheckInterval": {
            "type": "integer",
            "description": "#f/g, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "eventMeasureInterval": {
            "type": "integer",
            "description": "#f/h, min = 1 | max = 2592000",
            "format": "int32",
            "nullable": true
          },
          "eventChannel": {
            "type": "integer",
            "description": "#f/m",
            "format": "int32",
            "nullable": true
          },
          "eventOnValueThreshold": {
            "type": "number",
            "description": "#d/i",
            "format": "double",
            "nullable": true
          },
          "eventOffValueThreshold": {
            "type": "number",
            "description": "#d/j",
            "format": "double",
            "nullable": true
          },
          "eventDeltaValueThreshold": {
            "type": "number",
            "description": "#d/k",
            "format": "double",
            "nullable": true
          },
          "eventSendMailXTimes": {
            "type": "integer",
            "description": "#f/o, min = 1 | max = 30",
            "format": "int32",
            "nullable": true
          },
          "waterLevelCalculationEnable": {
            "type": "number",
            "description": "#d/m",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationLength": {
            "type": "number",
            "description": "#d/n",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationHeight": {
            "type": "number",
            "description": "#d/o",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationOffset": {
            "type": "number",
            "description": "#d/p",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationDensity": {
            "type": "number",
            "description": "#d/q",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationWidth": {
            "type": "number",
            "description": "#d/r",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationAngle": {
            "type": "number",
            "description": "#d/s",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationFormFactor": {
            "type": "number",
            "description": "#d/t",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationMinCalcHeight": {
            "type": "number",
            "description": "#d/u",
            "format": "double",
            "nullable": true
          },
          "waterLevelCalculationFormType": {
            "type": "integer",
            "description": "#c/3, 0 = none | 1 = A (0.85-0.88) | 2 = B (0.87-0.95) | 3 = C (1.13-1.27) | 4 = D (1.11)\r\n5 = E (1.30) | 6 = F (1.37) | 7 = Venturi (1.75-2.02) | 8 = Open tube (0.529)",
            "format": "int32",
            "nullable": true
          },
          "waterLevelCalculationIsAbsoluteSensor": {
            "type": "boolean",
            "description": "#c/7",
            "nullable": true
          },
          "waterLevelCalculationCalculateFrom": {
            "type": "integer",
            "description": "#c/8, 0 = P1-P2 | 1 = P1-PBaro | 2 = P1 relative | 3 = not defined",
            "format": "int32",
            "nullable": true
          },
          "waterLevelCalculationConversionTo": {
            "type": "integer",
            "description": "#c/9, 0 = Height of water above level sensor (E) | 1 = Distance to water surface (F)\r\n2 = Height of water above sea level (G) | 3 = Overflow (Poleni) | 4 = Overflow (Thomson)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Same as DeviceSettings except [Id], [IsSentFromAPI], [State] and [UniqueSerialNumber]"
      },
      "DeviceConfigurationsViewModel": {
        "type": "object",
        "properties": {
          "actualDeviceConfiguration": {
            "$ref": "#/components/schemas/DeviceConfigurationModel"
          },
          "pendingDeviceConfiguration": {
            "$ref": "#/components/schemas/DeviceConfigurationModel"
          }
        },
        "additionalProperties": false
      },
      "DeviceDetailsViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "stationId": {
            "type": "string",
            "nullable": true
          },
          "measurementDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementDefinitionViewModel"
            },
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "numberOfUnconfirmedAlarms": {
            "type": "integer",
            "format": "int32"
          },
          "lastMeasurementTransmissionDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signalQuality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "humidity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "batteryInfoVoltageInVolt": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "batteryInfoCapacityInPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transmissionInterval": {
            "type": "string",
            "description": "Estimated send interval in minutes",
            "nullable": true
          },
          "saveInterval": {
            "type": "string",
            "description": "The measure interval in minutes\r\nIn LoRa devices: TransmissionInterval==SaveInterval",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceListViewModel": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceLogCategory": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          12,
          14,
          15,
          16,
          20,
          31,
          40,
          44,
          45,
          46,
          50,
          100,
          110,
          120,
          121,
          122,
          130,
          140,
          150
        ],
        "type": "integer",
        "format": "int32"
      },
      "DeviceLogGetModel": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "$ref": "#/components/schemas/DeviceLogCategory"
          },
          "newChangeItemText": {
            "type": "string",
            "description": "This is a text representation of the new setting/configuration/change",
            "nullable": true
          },
          "oldChangeItemText": {
            "type": "string",
            "description": "Can be null. If not null: Should be JSON string.\r\nWhen changes can be compared, then it makes sense to show the old value for a comparison",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "If null then it is a group specific log (not device specific)",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DevicePutModel": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "networkNode": {
            "type": "string",
            "nullable": true
          },
          "transferType": {
            "type": "string",
            "nullable": true
          },
          "gsmNumber": {
            "type": "string",
            "nullable": true
          },
          "euiNumber": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FavoriteListViewModel": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FavoritePutPostModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "millisecondsFromNow": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timeRangeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRangeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedMeasurementDefinitionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FavoriteViewModel": {
        "type": "object",
        "properties": {
          "favoriteId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "millisecondsFromNow": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timeRangeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRangeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedMeasurementDefinitionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Filetype": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "FlowCalculationSettingsGetPutModel": {
        "type": "object",
        "properties": {
          "flowCalculationSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowCalculationSettingsModel"
            },
            "description": "List of 3 FlowCalculation identified by the MeasurementDefinitionId",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "List of 3 FlowCalculation identified by the MeasurementDefinitionId"
      },
      "FlowCalculationSettingsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "flowTankTypeId": {
            "type": "string",
            "nullable": true
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pressure1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pressure1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pressure2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pressure2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formFactorLength": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formFactorUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wallHeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "wallHeightUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formWidth": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formWidthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formAngle": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formAngleUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FtpCredentials": {
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "description": "The account's host name",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "The account's user name",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The account's password. IN PLAIN TEXT. Sorry.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FtpMailAccounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Reference id to the FtpAccount-Row-Id rsp. the MailAccount-Row-Id",
            "format": "int32",
            "nullable": true
          },
          "isAccountMailNotFtp": {
            "type": "boolean",
            "description": "Either it is a FTP account or a Mail account. FTP account is very much preferred.\r\nFalse: FTP / True: Mail / Default: False"
          },
          "ftpAccountHostName": {
            "type": "string",
            "description": "The account's host name",
            "nullable": true
          },
          "ftpAccountUserName": {
            "type": "string",
            "description": "The account's user name",
            "nullable": true
          },
          "ftpAccountPassword": {
            "type": "string",
            "description": "The account's password. IN PLAIN TEXT. Sorry.",
            "nullable": true
          },
          "ftpAccountRestrictToDevicesCommaSeparated": {
            "type": "string",
            "description": "List of devices to use. If NULL or \"\" then ALL devices will be used.",
            "nullable": true
          },
          "ftpAccountFolderStructure": {
            "type": "string",
            "description": "When there is a valid folder name then not the FTP root will be taken but the new folder structure on top of the root.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUser": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Is the user still active are meant to be removed from the group?\r\nTrue: Active, False: Should not see data and is meant to be removed"
          },
          "userName": {
            "type": "string",
            "description": "The user's name from AAD B2C",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "The user's E-Mail address used for authorization.\r\nIt's unclear if this is possible to extract from AAD B2C",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/RoleIdValue"
          },
          "networkVisibility": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of networks the user has access to.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HeightAboveSeeLevelCalculationSettingsViewModel": {
        "type": "object",
        "properties": {
          "calculationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "a": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "aUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "b": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HeightCalculationSettingsViewModel": {
        "type": "object",
        "properties": {
          "calculationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "p2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "registeredLatitude": {
            "type": "number",
            "description": "Is 0 when no value is stored",
            "format": "float"
          },
          "registeredLongitude": {
            "type": "number",
            "description": "Is 0 when no value is stored",
            "format": "float"
          },
          "triangulatedLatitude": {
            "type": "number",
            "description": "Does work with 2G, 3G but it won't work anymore with newer mobile chip module\r\nIs 0 when no value is stored",
            "format": "float"
          },
          "triangulatedLongitude": {
            "type": "number",
            "description": "Does work with 2G, 3G but it won't work anymore with newer mobile chip module\r\nIs 0 when no value is stored",
            "format": "float"
          },
          "altitudeInMeters": {
            "type": "number",
            "description": "Altitude set by user. There is no triangulated altitude\r\nIs 0 when no value is stored",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "MeUser": {
        "type": "object",
        "properties": {
          "ownUserName": {
            "type": "string",
            "description": "This is the username the user used to login",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isCustomerAdmin": {
            "type": "boolean"
          },
          "isContributor": {
            "type": "boolean"
          },
          "isReader": {
            "type": "boolean"
          },
          "displayWelcomeDialog": {
            "type": "boolean"
          },
          "displayFeatureDialog": {
            "type": "boolean"
          },
          "customerAdministrators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of CustomerAdministrator of the same group. Normally, this should be 1 person.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model class with information about Returns the own UserName, the own Role and the CustomerAdmin of the same group"
      },
      "MeasurementDefinitionLookUpViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementDefinitionViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MeasurementDefinitionsAlternativeNamesGetModel": {
        "type": "object",
        "properties": {
          "measurementDefinition": {
            "type": "integer",
            "format": "int32"
          },
          "alternative": {
            "type": "string",
            "nullable": true
          },
          "default": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementDefinitionsAlternativeNamesPutPostModel": {
        "type": "object",
        "properties": {
          "measurementDefinition": {
            "type": "integer",
            "format": "int32"
          },
          "alternative": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementValueViewModel": {
        "type": "object",
        "properties": {
          "measurementDefId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefIdName": {
            "type": "string",
            "nullable": true
          },
          "measurementValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MeasurementValuesListViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleMeasurementPair"
            },
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MeasurementViewModel": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementValueViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This should be in sync with \\Entities\\Data\\MeasurementDefinition.cs"
      },
      "MeasurementsAndDeviceIdViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "lastMeasurements": {
            "$ref": "#/components/schemas/MeasurementViewModel"
          }
        },
        "additionalProperties": false
      },
      "MultiSensorCalculationSettingViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "correspondsToMeasurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1MeasurementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2MeasurementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "a": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "aUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "b": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiSensorCalculationSettingViewModelOld": {
        "type": "object",
        "properties": {
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "correspondsToMeasurementDefinitionId": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "offsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1MeasurementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2MeasurementDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "p2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "a": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "aUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "b": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultiSensorCalculationSettingsViewModelOld": {
        "type": "object",
        "properties": {
          "sensorSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiSensorCalculationSettingViewModelOld"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageSettingsPostPutModel": {
        "type": "object",
        "properties": {
          "languageIso6391TwoLetterCode": {
            "type": "string",
            "nullable": true
          },
          "languageCultureName": {
            "type": "string",
            "nullable": true
          },
          "countryRegion": {
            "type": "string",
            "nullable": true
          },
          "utcOffset": {
            "type": "string",
            "nullable": true
          },
          "pressureUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pressureDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedPressureUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedPressureConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "temperatureUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "temperatureDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedTemperatureUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedTemperatureConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lengthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lengthDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedLengthUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedLengthConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conductivityUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "conductivityDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedConductivityUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedConductivityConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumeUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "volumeDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedVolumeUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedVolumeConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "flowUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "flowDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedFlowUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedFlowConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "voltageUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "voltageDecimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userDefinedVoltageUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedVoltageConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isLengthAxisInverted": {
            "type": "boolean",
            "description": "Default is False",
            "nullable": true
          },
          "chartType": {
            "type": "integer",
            "description": "0=Line Plot, 1=Scatter chart / Default is 0",
            "format": "int32",
            "nullable": true
          },
          "theme": {
            "type": "integer",
            "description": "0=Light Theme, 1=Dark Theme / Default is 0",
            "format": "int32",
            "nullable": true
          },
          "showCalculationForWaterLevel": {
            "type": "boolean",
            "description": "Default is True",
            "nullable": true
          },
          "showCalculationForWaterFlow": {
            "type": "boolean",
            "description": "Default is False",
            "nullable": true
          },
          "showCalculationForTankContent": {
            "type": "boolean",
            "description": "Default is False",
            "nullable": true
          },
          "showMultiCalculations": {
            "type": "boolean",
            "description": "Default is False",
            "nullable": true
          },
          "alternativeNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementDefinitionsAlternativeNamesPutPostModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageSettingsViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "languageIso6391TwoLetterCode": {
            "type": "string",
            "nullable": true
          },
          "languageCultureName": {
            "type": "string",
            "nullable": true
          },
          "countryRegion": {
            "type": "string",
            "nullable": true
          },
          "utcOffset": {
            "type": "string",
            "nullable": true
          },
          "pressureUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "pressureDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedPressureUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedPressureConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "temperatureUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedTemperatureUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedTemperatureConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lengthUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "lengthDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedLengthUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedLengthConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conductivityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "conductivityDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedConductivityUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedConductivityConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumeUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedVolumeUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedVolumeConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "flowUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "flowDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedFlowUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedFlowConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "voltageUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "voltageDecimalPlaces": {
            "type": "integer",
            "format": "int32"
          },
          "userDefinedVoltageUnitName": {
            "type": "string",
            "nullable": true
          },
          "userDefinedVoltageConversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isLengthAxisInverted": {
            "type": "boolean",
            "description": "Default is False",
            "nullable": true
          },
          "chartType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "theme": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "showCalculationForWaterLevel": {
            "type": "boolean",
            "nullable": true
          },
          "showCalculationForWaterFlow": {
            "type": "boolean",
            "nullable": true
          },
          "showCalculationForTankContent": {
            "type": "boolean",
            "nullable": true
          },
          "showMultiCalculations": {
            "type": "boolean",
            "nullable": true
          },
          "alternativeChannelNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementDefinitionsAlternativeNamesGetModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportType": {
        "enum": [
          0
        ],
        "type": "integer",
        "format": "int32"
      },
      "RoleIdValue": {
        "enum": [
          0,
          100,
          200,
          999
        ],
        "type": "integer",
        "format": "int32"
      },
      "SelectedChannelsPutModel": {
        "type": "object",
        "properties": {
          "selectedChannels": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "lastDataRangeTimeSpan": {
            "type": "string",
            "description": "If \"LastDataRangeTimeSpan\" is not null: Get Measurements from RangeEnd=now, RangeStar=now-TimeSpanRange",
            "nullable": true
          },
          "customRangeStartUtc": {
            "type": "string",
            "description": "IF CustomRangeStartUtc is not null and CustomRangeEndUtc is not null: Get Measurements from RangeEnd=CustomRangeEndUtc, RangeStar=CustomRangeStartUtc\r\nIF both LastDataRangeTimeSpan and CustomRangeStartUtc are null then get ALL data",
            "format": "date-time",
            "nullable": true
          },
          "customRangeEndUtc": {
            "type": "string",
            "description": "IF CustomRangeStartUtc is not null and CustomRangeEndUtc is not null: Get Measurements from RangeEnd=CustomRangeEndUtc, RangeStar=CustomRangeStartUtc\r\nIF both LastDataRangeTimeSpan and CustomRangeEndUtc are null then get ALL data",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectedChannelsViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementDefinitionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "lastDataRangeTimeSpan": {
            "type": "string",
            "nullable": true
          },
          "customRangeStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customRangeEndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleMeasurementPair": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TankCalculationSettingsModel": {
        "type": "object",
        "properties": {
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "tank1P1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1P1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1P2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1P2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1Height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank1HeightUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1Width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank1WidthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1Length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank1LengthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1B": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank1BUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank1TankTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2P1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2P1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2P2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2P2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2Height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank2HeightUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2Width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank2WidthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2Length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank2LengthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2B": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank2BUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank2TankTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3P1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3P1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3P2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3P2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3Height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank3HeightUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3Width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank3WidthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3Length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank3LengthUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3B": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tank3BUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tank3TankTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Token": {
        "type": "object",
        "properties": {
          "permanentAccessToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnitListViewModel": {
        "type": "object",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitViewModel"
            },
            "nullable": true
          },
          "measurementsDefinitionIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementDefinitionLookUpViewModel"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UnitViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "unitCategory": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "unitSymbol": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRolesViewModel": {
        "type": "object",
        "properties": {
          "customerAdminName": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isCustomerAdmin": {
            "type": "boolean"
          },
          "isContributor": {
            "type": "boolean"
          },
          "isReader": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ValuesListViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleMeasurementPair"
            },
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsPutModel": {
        "type": "object",
        "properties": {
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "depthOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthB": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthBUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslA": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslAUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslB": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslBUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "depthCalculationSettings": {
            "$ref": "#/components/schemas/DepthCalculationSettingsViewModel"
          },
          "heightCalculationSettings": {
            "$ref": "#/components/schemas/HeightCalculationSettingsViewModel"
          },
          "heightAboveSeeLevelCalculationSettings": {
            "$ref": "#/components/schemas/HeightAboveSeeLevelCalculationSettingsViewModel"
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsWithHistoryViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "settingsType": {
            "type": "integer",
            "description": "Either 34, 35, 36 or Null",
            "format": "int32",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/WaterCalculationSettingsWithLevelLinesViewModel"
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "If null then this is the actual configuration",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsWithLevelLinesAndHistoryPutModel": {
        "type": "object",
        "properties": {
          "allSettingsOfOneWaterCalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaterCalculationSettingsWithHistoryViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsWithLevelLinesAndHistoryViewMode": {
        "type": "object",
        "properties": {
          "allWaterCalculationSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaterCalculationSettingsWithHistoryViewModel"
            },
            "nullable": true
          },
          "historyRemarks": {
            "type": "string",
            "description": "A text field that might contain information of earlier used calculation based on sent (device) configurations",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsWithLevelLinesPutModel": {
        "type": "object",
        "properties": {
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "depthOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthB": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depthBUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslOffset": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslOffsetUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslP1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslP1UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslP2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslP2UnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslA": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslAUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightAslB": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "heightAslBUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depthCalculationShowReferenceLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "depthCalculationShowInstallationLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "depthCalculationReferenceLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "depthCalculationInstallationLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationShowReferenceLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationShowInstallationLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationReferenceLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationInstallationLevelLineColorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaterCalculationSettingsWithLevelLinesViewModel": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "densityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "gravity": {
            "type": "number",
            "format": "double"
          },
          "gravityUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "depthCalculationSettings": {
            "$ref": "#/components/schemas/DepthCalculationSettingsViewModel"
          },
          "heightCalculationSettings": {
            "$ref": "#/components/schemas/HeightCalculationSettingsViewModel"
          },
          "heightAboveSeeLevelCalculationSettings": {
            "$ref": "#/components/schemas/HeightAboveSeeLevelCalculationSettingsViewModel"
          },
          "depthCalculationShowReferenceLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "depthCalculationShowInstallationLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "depthCalculationReferenceLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "depthCalculationInstallationLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationShowReferenceLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationShowInstallationLevelLine": {
            "type": "boolean",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationReferenceLevelLineColorCode": {
            "type": "string",
            "nullable": true
          },
          "heightAboveSeaLevelCalculationInstallationLevelLineColorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Get the temporary bearer token from https://www.kolibricloud.ch/user-settings.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}