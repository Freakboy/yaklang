// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: crawler.proto

package ypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTTPCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value         string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	AllowOverride bool   `protobuf:"varint,3,opt,name=AllowOverride,proto3" json:"AllowOverride,omitempty"`
}

func (x *HTTPCookie) Reset() {
	*x = HTTPCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPCookie) ProtoMessage() {}

func (x *HTTPCookie) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPCookie.ProtoReflect.Descriptor instead.
func (*HTTPCookie) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{0}
}

func (x *HTTPCookie) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HTTPCookie) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HTTPCookie) GetAllowOverride() bool {
	if x != nil {
		return x.AllowOverride
	}
	return false
}

type StartBasicCrawlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets             string `protobuf:"bytes,1,opt,name=Targets,proto3" json:"Targets,omitempty"`
	TargetsFile         string `protobuf:"bytes,2,opt,name=TargetsFile,proto3" json:"TargetsFile,omitempty"`
	MaxDepth            string `protobuf:"bytes,3,opt,name=MaxDepth,proto3" json:"MaxDepth,omitempty"`
	MaxCountOfLinks     string `protobuf:"bytes,4,opt,name=MaxCountOfLinks,proto3" json:"MaxCountOfLinks,omitempty"`
	MaxCountOfRequest   string `protobuf:"bytes,5,opt,name=MaxCountOfRequest,proto3" json:"MaxCountOfRequest,omitempty"`
	DisallowSuffix      string `protobuf:"bytes,6,opt,name=DisallowSuffix,proto3" json:"DisallowSuffix,omitempty"`
	StartFromParentPath string `protobuf:"bytes,7,opt,name=StartFromParentPath,proto3" json:"StartFromParentPath,omitempty"`
	MaxRetryTimes       string `protobuf:"bytes,8,opt,name=MaxRetryTimes,proto3" json:"MaxRetryTimes,omitempty"`
	AllowMethods        string `protobuf:"bytes,9,opt,name=AllowMethods,proto3" json:"AllowMethods,omitempty"`
	AllowDomains        string `protobuf:"bytes,10,opt,name=AllowDomains,proto3" json:"AllowDomains,omitempty"`
	ForbiddenDomain     string `protobuf:"bytes,11,opt,name=ForbiddenDomain,proto3" json:"ForbiddenDomain,omitempty"`
	AllowUrlRegexp      string `protobuf:"bytes,12,opt,name=AllowUrlRegexp,proto3" json:"AllowUrlRegexp,omitempty"`
	ForbiddenUrlRegexp  string `protobuf:"bytes,13,opt,name=ForbiddenUrlRegexp,proto3" json:"ForbiddenUrlRegexp,omitempty"`
	UserAgent           string `protobuf:"bytes,14,opt,name=UserAgent,proto3" json:"UserAgent,omitempty"`
	// 基础认证
	BasicAuth         string `protobuf:"bytes,15,opt,name=BasicAuth,proto3" json:"BasicAuth,omitempty"`
	BasicAuthUsername string `protobuf:"bytes,16,opt,name=BasicAuthUsername,proto3" json:"BasicAuthUsername,omitempty"`
	BasicAuthPassword string `protobuf:"bytes,17,opt,name=BasicAuthPassword,proto3" json:"BasicAuthPassword,omitempty"`
	// Transport
	Proxies                []string      `protobuf:"bytes,18,rep,name=Proxies,proto3" json:"Proxies,omitempty"`
	Concurrent             int64         `protobuf:"varint,19,opt,name=Concurrent,proto3" json:"Concurrent,omitempty"`
	MaxRedirectTimes       int64         `protobuf:"varint,20,opt,name=MaxRedirectTimes,proto3" json:"MaxRedirectTimes,omitempty"`
	ConnectTimeoutSeconds  int64         `protobuf:"varint,21,opt,name=ConnectTimeoutSeconds,proto3" json:"ConnectTimeoutSeconds,omitempty"`
	ResponseTimeoutSeconds int64         `protobuf:"varint,22,opt,name=ResponseTimeoutSeconds,proto3" json:"ResponseTimeoutSeconds,omitempty"`
	Headers                []*HTTPHeader `protobuf:"bytes,23,rep,name=Headers,proto3" json:"Headers,omitempty"`
	Cookies                []*HTTPCookie `protobuf:"bytes,24,rep,name=Cookies,proto3" json:"Cookies,omitempty"`
}

func (x *StartBasicCrawlerRequest) Reset() {
	*x = StartBasicCrawlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBasicCrawlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBasicCrawlerRequest) ProtoMessage() {}

func (x *StartBasicCrawlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBasicCrawlerRequest.ProtoReflect.Descriptor instead.
func (*StartBasicCrawlerRequest) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{1}
}

func (x *StartBasicCrawlerRequest) GetTargets() string {
	if x != nil {
		return x.Targets
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetTargetsFile() string {
	if x != nil {
		return x.TargetsFile
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetMaxDepth() string {
	if x != nil {
		return x.MaxDepth
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetMaxCountOfLinks() string {
	if x != nil {
		return x.MaxCountOfLinks
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetMaxCountOfRequest() string {
	if x != nil {
		return x.MaxCountOfRequest
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetDisallowSuffix() string {
	if x != nil {
		return x.DisallowSuffix
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetStartFromParentPath() string {
	if x != nil {
		return x.StartFromParentPath
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetMaxRetryTimes() string {
	if x != nil {
		return x.MaxRetryTimes
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetAllowMethods() string {
	if x != nil {
		return x.AllowMethods
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetAllowDomains() string {
	if x != nil {
		return x.AllowDomains
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetForbiddenDomain() string {
	if x != nil {
		return x.ForbiddenDomain
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetAllowUrlRegexp() string {
	if x != nil {
		return x.AllowUrlRegexp
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetForbiddenUrlRegexp() string {
	if x != nil {
		return x.ForbiddenUrlRegexp
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetBasicAuth() string {
	if x != nil {
		return x.BasicAuth
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetBasicAuthUsername() string {
	if x != nil {
		return x.BasicAuthUsername
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetBasicAuthPassword() string {
	if x != nil {
		return x.BasicAuthPassword
	}
	return ""
}

func (x *StartBasicCrawlerRequest) GetProxies() []string {
	if x != nil {
		return x.Proxies
	}
	return nil
}

func (x *StartBasicCrawlerRequest) GetConcurrent() int64 {
	if x != nil {
		return x.Concurrent
	}
	return 0
}

func (x *StartBasicCrawlerRequest) GetMaxRedirectTimes() int64 {
	if x != nil {
		return x.MaxRedirectTimes
	}
	return 0
}

func (x *StartBasicCrawlerRequest) GetConnectTimeoutSeconds() int64 {
	if x != nil {
		return x.ConnectTimeoutSeconds
	}
	return 0
}

func (x *StartBasicCrawlerRequest) GetResponseTimeoutSeconds() int64 {
	if x != nil {
		return x.ResponseTimeoutSeconds
	}
	return 0
}

func (x *StartBasicCrawlerRequest) GetHeaders() []*HTTPHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *StartBasicCrawlerRequest) GetCookies() []*HTTPCookie {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type SimpleScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *SimpleScript) Reset() {
	*x = SimpleScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleScript) ProtoMessage() {}

func (x *SimpleScript) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleScript.ProtoReflect.Descriptor instead.
func (*SimpleScript) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleScript) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GenerateWebsiteTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets string `protobuf:"bytes,1,opt,name=Targets,proto3" json:"Targets,omitempty"`
}

func (x *GenerateWebsiteTreeRequest) Reset() {
	*x = GenerateWebsiteTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebsiteTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebsiteTreeRequest) ProtoMessage() {}

func (x *GenerateWebsiteTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebsiteTreeRequest.ProtoReflect.Descriptor instead.
func (*GenerateWebsiteTreeRequest) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateWebsiteTreeRequest) GetTargets() string {
	if x != nil {
		return x.Targets
	}
	return ""
}

type GenerateWebsiteTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreeDataJson []byte `protobuf:"bytes,1,opt,name=TreeDataJson,proto3" json:"TreeDataJson,omitempty"`
}

func (x *GenerateWebsiteTreeResponse) Reset() {
	*x = GenerateWebsiteTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebsiteTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebsiteTreeResponse) ProtoMessage() {}

func (x *GenerateWebsiteTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebsiteTreeResponse.ProtoReflect.Descriptor instead.
func (*GenerateWebsiteTreeResponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateWebsiteTreeResponse) GetTreeDataJson() []byte {
	if x != nil {
		return x.TreeDataJson
	}
	return nil
}

var File_crawler_proto protoreflect.FileDescriptor

var file_crawler_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x79, 0x70, 0x62, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0a, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22,
	0xd6, 0x07, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x66, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d,
	0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x61, 0x78, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a,
	0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x79, 0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52,
	0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x1b, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x65,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x54, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x32, 0xe6, 0x01,
	0x0a, 0x0e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x43, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x14, 0x56, 0x69, 0x65, 0x77, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x2e,
	0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x79, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x58, 0x0a, 0x13,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x54,
	0x72, 0x65, 0x65, 0x12, 0x1f, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x3b, 0x79, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crawler_proto_rawDescOnce sync.Once
	file_crawler_proto_rawDescData = file_crawler_proto_rawDesc
)

func file_crawler_proto_rawDescGZIP() []byte {
	file_crawler_proto_rawDescOnce.Do(func() {
		file_crawler_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawler_proto_rawDescData)
	})
	return file_crawler_proto_rawDescData
}

var file_crawler_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_crawler_proto_goTypes = []interface{}{
	(*HTTPCookie)(nil),                  // 0: ypb.HTTPCookie
	(*StartBasicCrawlerRequest)(nil),    // 1: ypb.StartBasicCrawlerRequest
	(*SimpleScript)(nil),                // 2: ypb.SimpleScript
	(*GenerateWebsiteTreeRequest)(nil),  // 3: ypb.GenerateWebsiteTreeRequest
	(*GenerateWebsiteTreeResponse)(nil), // 4: ypb.GenerateWebsiteTreeResponse
	(*HTTPHeader)(nil),                  // 5: ypb.HTTPHeader
	(*Empty)(nil),                       // 6: ypb.Empty
	(*ExecResult)(nil),                  // 7: ypb.ExecResult
}
var file_crawler_proto_depIdxs = []int32{
	5, // 0: ypb.StartBasicCrawlerRequest.Headers:type_name -> ypb.HTTPHeader
	0, // 1: ypb.StartBasicCrawlerRequest.Cookies:type_name -> ypb.HTTPCookie
	1, // 2: ypb.CrawlerService.StartBasicCrawler:input_type -> ypb.StartBasicCrawlerRequest
	6, // 3: ypb.CrawlerService.ViewBasicCrawlerCode:input_type -> ypb.Empty
	3, // 4: ypb.CrawlerService.GenerateWebsiteTree:input_type -> ypb.GenerateWebsiteTreeRequest
	7, // 5: ypb.CrawlerService.StartBasicCrawler:output_type -> ypb.ExecResult
	2, // 6: ypb.CrawlerService.ViewBasicCrawlerCode:output_type -> ypb.SimpleScript
	4, // 7: ypb.CrawlerService.GenerateWebsiteTree:output_type -> ypb.GenerateWebsiteTreeResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_crawler_proto_init() }
func file_crawler_proto_init() {
	if File_crawler_proto != nil {
		return
	}
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_crawler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBasicCrawlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebsiteTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebsiteTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawler_proto_goTypes,
		DependencyIndexes: file_crawler_proto_depIdxs,
		MessageInfos:      file_crawler_proto_msgTypes,
	}.Build()
	File_crawler_proto = out.File
	file_crawler_proto_rawDesc = nil
	file_crawler_proto_goTypes = nil
	file_crawler_proto_depIdxs = nil
}
