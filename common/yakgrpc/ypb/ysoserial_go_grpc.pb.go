// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: ysoserial_go.proto

package ypb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	YsoSerialGoService_GetAllYsoGadgetOptions_FullMethodName         = "/ypb.YsoSerialGoService/GetAllYsoGadgetOptions"
	YsoSerialGoService_GetAllYsoClassOptions_FullMethodName          = "/ypb.YsoSerialGoService/GetAllYsoClassOptions"
	YsoSerialGoService_GetAllYsoClassGeneraterOptions_FullMethodName = "/ypb.YsoSerialGoService/GetAllYsoClassGeneraterOptions"
	YsoSerialGoService_GenerateYsoCode_FullMethodName                = "/ypb.YsoSerialGoService/GenerateYsoCode"
	YsoSerialGoService_GenerateYsoBytes_FullMethodName               = "/ypb.YsoSerialGoService/GenerateYsoBytes"
	YsoSerialGoService_YsoDump_FullMethodName                        = "/ypb.YsoSerialGoService/YsoDump"
)

// YsoSerialGoServiceClient is the client API for YsoSerialGoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type YsoSerialGoServiceClient interface {
	// Yso
	GetAllYsoGadgetOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*YsoOptionsWithVerbose, error)
	GetAllYsoClassOptions(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoOptionsWithVerbose, error)
	GetAllYsoClassGeneraterOptions(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoClassOptionsResponseWithVerbose, error)
	GenerateYsoCode(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoCodeResponse, error)
	GenerateYsoBytes(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoBytesResponse, error)
	YsoDump(ctx context.Context, in *YsoBytesObject, opts ...grpc.CallOption) (*YsoDumpResponse, error)
}

type ysoSerialGoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYsoSerialGoServiceClient(cc grpc.ClientConnInterface) YsoSerialGoServiceClient {
	return &ysoSerialGoServiceClient{cc}
}

func (c *ysoSerialGoServiceClient) GetAllYsoGadgetOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*YsoOptionsWithVerbose, error) {
	out := new(YsoOptionsWithVerbose)
	err := c.cc.Invoke(ctx, YsoSerialGoService_GetAllYsoGadgetOptions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ysoSerialGoServiceClient) GetAllYsoClassOptions(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoOptionsWithVerbose, error) {
	out := new(YsoOptionsWithVerbose)
	err := c.cc.Invoke(ctx, YsoSerialGoService_GetAllYsoClassOptions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ysoSerialGoServiceClient) GetAllYsoClassGeneraterOptions(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoClassOptionsResponseWithVerbose, error) {
	out := new(YsoClassOptionsResponseWithVerbose)
	err := c.cc.Invoke(ctx, YsoSerialGoService_GetAllYsoClassGeneraterOptions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ysoSerialGoServiceClient) GenerateYsoCode(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoCodeResponse, error) {
	out := new(YsoCodeResponse)
	err := c.cc.Invoke(ctx, YsoSerialGoService_GenerateYsoCode_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ysoSerialGoServiceClient) GenerateYsoBytes(ctx context.Context, in *YsoOptionsRequerstWithVerbose, opts ...grpc.CallOption) (*YsoBytesResponse, error) {
	out := new(YsoBytesResponse)
	err := c.cc.Invoke(ctx, YsoSerialGoService_GenerateYsoBytes_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ysoSerialGoServiceClient) YsoDump(ctx context.Context, in *YsoBytesObject, opts ...grpc.CallOption) (*YsoDumpResponse, error) {
	out := new(YsoDumpResponse)
	err := c.cc.Invoke(ctx, YsoSerialGoService_YsoDump_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YsoSerialGoServiceServer is the server API for YsoSerialGoService service.
// All implementations must embed UnimplementedYsoSerialGoServiceServer
// for forward compatibility
type YsoSerialGoServiceServer interface {
	// Yso
	GetAllYsoGadgetOptions(context.Context, *Empty) (*YsoOptionsWithVerbose, error)
	GetAllYsoClassOptions(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoOptionsWithVerbose, error)
	GetAllYsoClassGeneraterOptions(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoClassOptionsResponseWithVerbose, error)
	GenerateYsoCode(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoCodeResponse, error)
	GenerateYsoBytes(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoBytesResponse, error)
	YsoDump(context.Context, *YsoBytesObject) (*YsoDumpResponse, error)
	mustEmbedUnimplementedYsoSerialGoServiceServer()
}

// UnimplementedYsoSerialGoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedYsoSerialGoServiceServer struct {
}

func (UnimplementedYsoSerialGoServiceServer) GetAllYsoGadgetOptions(context.Context, *Empty) (*YsoOptionsWithVerbose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllYsoGadgetOptions not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) GetAllYsoClassOptions(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoOptionsWithVerbose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllYsoClassOptions not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) GetAllYsoClassGeneraterOptions(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoClassOptionsResponseWithVerbose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllYsoClassGeneraterOptions not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) GenerateYsoCode(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateYsoCode not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) GenerateYsoBytes(context.Context, *YsoOptionsRequerstWithVerbose) (*YsoBytesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateYsoBytes not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) YsoDump(context.Context, *YsoBytesObject) (*YsoDumpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method YsoDump not implemented")
}
func (UnimplementedYsoSerialGoServiceServer) mustEmbedUnimplementedYsoSerialGoServiceServer() {}

// UnsafeYsoSerialGoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to YsoSerialGoServiceServer will
// result in compilation errors.
type UnsafeYsoSerialGoServiceServer interface {
	mustEmbedUnimplementedYsoSerialGoServiceServer()
}

func RegisterYsoSerialGoServiceServer(s grpc.ServiceRegistrar, srv YsoSerialGoServiceServer) {
	s.RegisterService(&YsoSerialGoService_ServiceDesc, srv)
}

func _YsoSerialGoService_GetAllYsoGadgetOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).GetAllYsoGadgetOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_GetAllYsoGadgetOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).GetAllYsoGadgetOptions(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _YsoSerialGoService_GetAllYsoClassOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YsoOptionsRequerstWithVerbose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).GetAllYsoClassOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_GetAllYsoClassOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).GetAllYsoClassOptions(ctx, req.(*YsoOptionsRequerstWithVerbose))
	}
	return interceptor(ctx, in, info, handler)
}

func _YsoSerialGoService_GetAllYsoClassGeneraterOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YsoOptionsRequerstWithVerbose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).GetAllYsoClassGeneraterOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_GetAllYsoClassGeneraterOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).GetAllYsoClassGeneraterOptions(ctx, req.(*YsoOptionsRequerstWithVerbose))
	}
	return interceptor(ctx, in, info, handler)
}

func _YsoSerialGoService_GenerateYsoCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YsoOptionsRequerstWithVerbose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).GenerateYsoCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_GenerateYsoCode_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).GenerateYsoCode(ctx, req.(*YsoOptionsRequerstWithVerbose))
	}
	return interceptor(ctx, in, info, handler)
}

func _YsoSerialGoService_GenerateYsoBytes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YsoOptionsRequerstWithVerbose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).GenerateYsoBytes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_GenerateYsoBytes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).GenerateYsoBytes(ctx, req.(*YsoOptionsRequerstWithVerbose))
	}
	return interceptor(ctx, in, info, handler)
}

func _YsoSerialGoService_YsoDump_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YsoBytesObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YsoSerialGoServiceServer).YsoDump(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YsoSerialGoService_YsoDump_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YsoSerialGoServiceServer).YsoDump(ctx, req.(*YsoBytesObject))
	}
	return interceptor(ctx, in, info, handler)
}

// YsoSerialGoService_ServiceDesc is the grpc.ServiceDesc for YsoSerialGoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var YsoSerialGoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ypb.YsoSerialGoService",
	HandlerType: (*YsoSerialGoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllYsoGadgetOptions",
			Handler:    _YsoSerialGoService_GetAllYsoGadgetOptions_Handler,
		},
		{
			MethodName: "GetAllYsoClassOptions",
			Handler:    _YsoSerialGoService_GetAllYsoClassOptions_Handler,
		},
		{
			MethodName: "GetAllYsoClassGeneraterOptions",
			Handler:    _YsoSerialGoService_GetAllYsoClassGeneraterOptions_Handler,
		},
		{
			MethodName: "GenerateYsoCode",
			Handler:    _YsoSerialGoService_GenerateYsoCode_Handler,
		},
		{
			MethodName: "GenerateYsoBytes",
			Handler:    _YsoSerialGoService_GenerateYsoBytes_Handler,
		},
		{
			MethodName: "YsoDump",
			Handler:    _YsoSerialGoService_YsoDump_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ysoserial_go.proto",
}
