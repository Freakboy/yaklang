// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: brute_api.proto

package ypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAvailableBruteTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []string `protobuf:"bytes,1,rep,name=Types,proto3" json:"Types,omitempty"`
}

func (x *GetAvailableBruteTypesResponse) Reset() {
	*x = GetAvailableBruteTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brute_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableBruteTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableBruteTypesResponse) ProtoMessage() {}

func (x *GetAvailableBruteTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brute_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableBruteTypesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableBruteTypesResponse) Descriptor() ([]byte, []int) {
	return file_brute_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetAvailableBruteTypesResponse) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type StartBruteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Targets    string `protobuf:"bytes,2,opt,name=Targets,proto3" json:"Targets,omitempty"`
	TargetFile string `protobuf:"bytes,3,opt,name=TargetFile,proto3" json:"TargetFile,omitempty"`
	// 设置如果用户输入了，就代替默认字典
	ReplaceDefaultUsernameDict bool     `protobuf:"varint,28,opt,name=ReplaceDefaultUsernameDict,proto3" json:"ReplaceDefaultUsernameDict,omitempty"`
	ReplaceDefaultPasswordDict bool     `protobuf:"varint,29,opt,name=ReplaceDefaultPasswordDict,proto3" json:"ReplaceDefaultPasswordDict,omitempty"`
	Usernames                  []string `protobuf:"bytes,4,rep,name=Usernames,proto3" json:"Usernames,omitempty"`
	UsernameFile               string   `protobuf:"bytes,24,opt,name=UsernameFile,proto3" json:"UsernameFile,omitempty"`
	Passwords                  []string `protobuf:"bytes,5,rep,name=Passwords,proto3" json:"Passwords,omitempty"`
	PasswordFile               string   `protobuf:"bytes,25,opt,name=PasswordFile,proto3" json:"PasswordFile,omitempty"`
	Prefix                     []string `protobuf:"bytes,6,rep,name=Prefix,proto3" json:"Prefix,omitempty"`
	Timeout                    float32  `protobuf:"fixed32,7,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	// 每个目标之间的并发
	Concurrent int64 `protobuf:"varint,8,opt,name=Concurrent,proto3" json:"Concurrent,omitempty"`
	Retry      int64 `protobuf:"varint,9,opt,name=Retry,proto3" json:"Retry,omitempty"`
	// 目标任务内并发
	TargetTaskConcurrent int64  `protobuf:"varint,10,opt,name=TargetTaskConcurrent,proto3" json:"TargetTaskConcurrent,omitempty"`
	OkToStop             bool   `protobuf:"varint,11,opt,name=OkToStop,proto3" json:"OkToStop,omitempty"`
	DelayMin             int64  `protobuf:"varint,12,opt,name=DelayMin,proto3" json:"DelayMin,omitempty"`
	DelayMax             int64  `protobuf:"varint,13,opt,name=DelayMax,proto3" json:"DelayMax,omitempty"`
	PluginScriptName     string `protobuf:"bytes,14,opt,name=PluginScriptName,proto3" json:"PluginScriptName,omitempty"`
}

func (x *StartBruteParams) Reset() {
	*x = StartBruteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brute_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBruteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBruteParams) ProtoMessage() {}

func (x *StartBruteParams) ProtoReflect() protoreflect.Message {
	mi := &file_brute_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBruteParams.ProtoReflect.Descriptor instead.
func (*StartBruteParams) Descriptor() ([]byte, []int) {
	return file_brute_api_proto_rawDescGZIP(), []int{1}
}

func (x *StartBruteParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StartBruteParams) GetTargets() string {
	if x != nil {
		return x.Targets
	}
	return ""
}

func (x *StartBruteParams) GetTargetFile() string {
	if x != nil {
		return x.TargetFile
	}
	return ""
}

func (x *StartBruteParams) GetReplaceDefaultUsernameDict() bool {
	if x != nil {
		return x.ReplaceDefaultUsernameDict
	}
	return false
}

func (x *StartBruteParams) GetReplaceDefaultPasswordDict() bool {
	if x != nil {
		return x.ReplaceDefaultPasswordDict
	}
	return false
}

func (x *StartBruteParams) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

func (x *StartBruteParams) GetUsernameFile() string {
	if x != nil {
		return x.UsernameFile
	}
	return ""
}

func (x *StartBruteParams) GetPasswords() []string {
	if x != nil {
		return x.Passwords
	}
	return nil
}

func (x *StartBruteParams) GetPasswordFile() string {
	if x != nil {
		return x.PasswordFile
	}
	return ""
}

func (x *StartBruteParams) GetPrefix() []string {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *StartBruteParams) GetTimeout() float32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *StartBruteParams) GetConcurrent() int64 {
	if x != nil {
		return x.Concurrent
	}
	return 0
}

func (x *StartBruteParams) GetRetry() int64 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *StartBruteParams) GetTargetTaskConcurrent() int64 {
	if x != nil {
		return x.TargetTaskConcurrent
	}
	return 0
}

func (x *StartBruteParams) GetOkToStop() bool {
	if x != nil {
		return x.OkToStop
	}
	return false
}

func (x *StartBruteParams) GetDelayMin() int64 {
	if x != nil {
		return x.DelayMin
	}
	return 0
}

func (x *StartBruteParams) GetDelayMax() int64 {
	if x != nil {
		return x.DelayMax
	}
	return 0
}

func (x *StartBruteParams) GetPluginScriptName() string {
	if x != nil {
		return x.PluginScriptName
	}
	return ""
}

var File_brute_api_proto protoreflect.FileDescriptor

var file_brute_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x72, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x79, 0x70, 0x62, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x80, 0x05, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x75, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x69,
	0x63, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x44, 0x69, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6b, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4f, 0x6b, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x32, 0x8d, 0x01, 0x0a, 0x08, 0x42, 0x72, 0x75, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x75, 0x74, 0x65, 0x12,
	0x15, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x75, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x23, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x72, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x3b, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_brute_api_proto_rawDescOnce sync.Once
	file_brute_api_proto_rawDescData = file_brute_api_proto_rawDesc
)

func file_brute_api_proto_rawDescGZIP() []byte {
	file_brute_api_proto_rawDescOnce.Do(func() {
		file_brute_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_brute_api_proto_rawDescData)
	})
	return file_brute_api_proto_rawDescData
}

var file_brute_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_brute_api_proto_goTypes = []interface{}{
	(*GetAvailableBruteTypesResponse)(nil), // 0: ypb.GetAvailableBruteTypesResponse
	(*StartBruteParams)(nil),               // 1: ypb.StartBruteParams
	(*Empty)(nil),                          // 2: ypb.Empty
	(*ExecResult)(nil),                     // 3: ypb.ExecResult
}
var file_brute_api_proto_depIdxs = []int32{
	1, // 0: ypb.BruteApi.StartBrute:input_type -> ypb.StartBruteParams
	2, // 1: ypb.BruteApi.GetAvailableBruteTypes:input_type -> ypb.Empty
	3, // 2: ypb.BruteApi.StartBrute:output_type -> ypb.ExecResult
	0, // 3: ypb.BruteApi.GetAvailableBruteTypes:output_type -> ypb.GetAvailableBruteTypesResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_brute_api_proto_init() }
func file_brute_api_proto_init() {
	if File_brute_api_proto != nil {
		return
	}
	file_message_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_brute_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableBruteTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brute_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBruteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brute_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brute_api_proto_goTypes,
		DependencyIndexes: file_brute_api_proto_depIdxs,
		MessageInfos:      file_brute_api_proto_msgTypes,
	}.Build()
	File_brute_api_proto = out.File
	file_brute_api_proto_rawDesc = nil
	file_brute_api_proto_goTypes = nil
	file_brute_api_proto_depIdxs = nil
}
