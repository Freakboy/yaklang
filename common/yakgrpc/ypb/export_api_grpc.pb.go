// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: export_api.proto

package ypb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ExportApi_ExtractDataToFile_FullMethodName = "/ypb.ExportApi/ExtractDataToFile"
)

// ExportApiClient is the client API for ExportApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExportApiClient interface {
	ExtractDataToFile(ctx context.Context, opts ...grpc.CallOption) (ExportApi_ExtractDataToFileClient, error)
}

type exportApiClient struct {
	cc grpc.ClientConnInterface
}

func NewExportApiClient(cc grpc.ClientConnInterface) ExportApiClient {
	return &exportApiClient{cc}
}

func (c *exportApiClient) ExtractDataToFile(ctx context.Context, opts ...grpc.CallOption) (ExportApi_ExtractDataToFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &ExportApi_ServiceDesc.Streams[0], ExportApi_ExtractDataToFile_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &exportApiExtractDataToFileClient{stream}
	return x, nil
}

type ExportApi_ExtractDataToFileClient interface {
	Send(*ExtractDataToFileRequest) error
	Recv() (*ExtractDataToFileResult, error)
	grpc.ClientStream
}

type exportApiExtractDataToFileClient struct {
	grpc.ClientStream
}

func (x *exportApiExtractDataToFileClient) Send(m *ExtractDataToFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exportApiExtractDataToFileClient) Recv() (*ExtractDataToFileResult, error) {
	m := new(ExtractDataToFileResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExportApiServer is the server API for ExportApi service.
// All implementations must embed UnimplementedExportApiServer
// for forward compatibility
type ExportApiServer interface {
	ExtractDataToFile(ExportApi_ExtractDataToFileServer) error
	mustEmbedUnimplementedExportApiServer()
}

// UnimplementedExportApiServer must be embedded to have forward compatible implementations.
type UnimplementedExportApiServer struct {
}

func (UnimplementedExportApiServer) ExtractDataToFile(ExportApi_ExtractDataToFileServer) error {
	return status.Errorf(codes.Unimplemented, "method ExtractDataToFile not implemented")
}
func (UnimplementedExportApiServer) mustEmbedUnimplementedExportApiServer() {}

// UnsafeExportApiServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExportApiServer will
// result in compilation errors.
type UnsafeExportApiServer interface {
	mustEmbedUnimplementedExportApiServer()
}

func RegisterExportApiServer(s grpc.ServiceRegistrar, srv ExportApiServer) {
	s.RegisterService(&ExportApi_ServiceDesc, srv)
}

func _ExportApi_ExtractDataToFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExportApiServer).ExtractDataToFile(&exportApiExtractDataToFileServer{stream})
}

type ExportApi_ExtractDataToFileServer interface {
	Send(*ExtractDataToFileResult) error
	Recv() (*ExtractDataToFileRequest, error)
	grpc.ServerStream
}

type exportApiExtractDataToFileServer struct {
	grpc.ServerStream
}

func (x *exportApiExtractDataToFileServer) Send(m *ExtractDataToFileResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exportApiExtractDataToFileServer) Recv() (*ExtractDataToFileRequest, error) {
	m := new(ExtractDataToFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExportApi_ServiceDesc is the grpc.ServiceDesc for ExportApi service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExportApi_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ypb.ExportApi",
	HandlerType: (*ExportApiServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExtractDataToFile",
			Handler:       _ExportApi_ExtractDataToFile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "export_api.proto",
}
