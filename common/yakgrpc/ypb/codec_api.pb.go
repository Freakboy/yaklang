// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: codec_api.proto

package ypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AutoDecodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TypeVerbose string `protobuf:"bytes,2,opt,name=TypeVerbose,proto3" json:"TypeVerbose,omitempty"`
	Origin      []byte `protobuf:"bytes,3,opt,name=Origin,proto3" json:"Origin,omitempty"`
	Result      []byte `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *AutoDecodeResult) Reset() {
	*x = AutoDecodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codec_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoDecodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoDecodeResult) ProtoMessage() {}

func (x *AutoDecodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_codec_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoDecodeResult.ProtoReflect.Descriptor instead.
func (*AutoDecodeResult) Descriptor() ([]byte, []int) {
	return file_codec_api_proto_rawDescGZIP(), []int{0}
}

func (x *AutoDecodeResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AutoDecodeResult) GetTypeVerbose() string {
	if x != nil {
		return x.TypeVerbose
	}
	return ""
}

func (x *AutoDecodeResult) GetOrigin() []byte {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *AutoDecodeResult) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

type AutoDecodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AutoDecodeResult `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *AutoDecodeResponse) Reset() {
	*x = AutoDecodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codec_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoDecodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoDecodeResponse) ProtoMessage() {}

func (x *AutoDecodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoDecodeResponse.ProtoReflect.Descriptor instead.
func (*AutoDecodeResponse) Descriptor() ([]byte, []int) {
	return file_codec_api_proto_rawDescGZIP(), []int{1}
}

func (x *AutoDecodeResponse) GetResults() []*AutoDecodeResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type AutoDecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AutoDecodeRequest) Reset() {
	*x = AutoDecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codec_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoDecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoDecodeRequest) ProtoMessage() {}

func (x *AutoDecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoDecodeRequest.ProtoReflect.Descriptor instead.
func (*AutoDecodeRequest) Descriptor() ([]byte, []int) {
	return file_codec_api_proto_rawDescGZIP(), []int{2}
}

func (x *AutoDecodeRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CodecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string           `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	Type       string           `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Auto       bool             `protobuf:"varint,3,opt,name=Auto,proto3" json:"Auto,omitempty"`
	Params     []*ExecParamItem `protobuf:"bytes,4,rep,name=Params,proto3" json:"Params,omitempty"`
	ScriptName string           `protobuf:"bytes,5,opt,name=ScriptName,proto3" json:"ScriptName,omitempty"`
	// 如果 InputBytes 设置了，将会无条件覆盖 Text
	InputBytes []byte `protobuf:"bytes,6,opt,name=InputBytes,proto3" json:"InputBytes,omitempty"`
}

func (x *CodecRequest) Reset() {
	*x = CodecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codec_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodecRequest) ProtoMessage() {}

func (x *CodecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodecRequest.ProtoReflect.Descriptor instead.
func (*CodecRequest) Descriptor() ([]byte, []int) {
	return file_codec_api_proto_rawDescGZIP(), []int{3}
}

func (x *CodecRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CodecRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CodecRequest) GetAuto() bool {
	if x != nil {
		return x.Auto
	}
	return false
}

func (x *CodecRequest) GetParams() []*ExecParamItem {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CodecRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *CodecRequest) GetInputBytes() []byte {
	if x != nil {
		return x.InputBytes
	}
	return nil
}

type CodecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CodecResponse) Reset() {
	*x = CodecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codec_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodecResponse) ProtoMessage() {}

func (x *CodecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodecResponse.ProtoReflect.Descriptor instead.
func (*CodecResponse) Descriptor() ([]byte, []int) {
	return file_codec_api_proto_rawDescGZIP(), []int{4}
}

func (x *CodecResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_codec_api_proto protoreflect.FileDescriptor

var file_codec_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x79, 0x70, 0x62, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x10, 0x41, 0x75, 0x74,
	0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x56, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x70, 0x62,
	0x2e, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x41, 0x75,
	0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x75, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x41, 0x75, 0x74, 0x6f,
	0x12, 0x2a, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0d,
	0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x79, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x41, 0x70,
	0x69, 0x12, 0x2e, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x11, 0x2e, 0x79, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x79, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x07, 0x5a, 0x05, 0x2f, 0x3b, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_codec_api_proto_rawDescOnce sync.Once
	file_codec_api_proto_rawDescData = file_codec_api_proto_rawDesc
)

func file_codec_api_proto_rawDescGZIP() []byte {
	file_codec_api_proto_rawDescOnce.Do(func() {
		file_codec_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_codec_api_proto_rawDescData)
	})
	return file_codec_api_proto_rawDescData
}

var file_codec_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_codec_api_proto_goTypes = []interface{}{
	(*AutoDecodeResult)(nil),   // 0: ypb.AutoDecodeResult
	(*AutoDecodeResponse)(nil), // 1: ypb.AutoDecodeResponse
	(*AutoDecodeRequest)(nil),  // 2: ypb.AutoDecodeRequest
	(*CodecRequest)(nil),       // 3: ypb.CodecRequest
	(*CodecResponse)(nil),      // 4: ypb.CodecResponse
	(*ExecParamItem)(nil),      // 5: ypb.ExecParamItem
}
var file_codec_api_proto_depIdxs = []int32{
	0, // 0: ypb.AutoDecodeResponse.Results:type_name -> ypb.AutoDecodeResult
	5, // 1: ypb.CodecRequest.Params:type_name -> ypb.ExecParamItem
	3, // 2: ypb.CodecApi.Codec:input_type -> ypb.CodecRequest
	2, // 3: ypb.CodecApi.AutoDecode:input_type -> ypb.AutoDecodeRequest
	4, // 4: ypb.CodecApi.Codec:output_type -> ypb.CodecResponse
	1, // 5: ypb.CodecApi.AutoDecode:output_type -> ypb.AutoDecodeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_codec_api_proto_init() }
func file_codec_api_proto_init() {
	if File_codec_api_proto != nil {
		return
	}
	file_message_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_codec_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoDecodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codec_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoDecodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codec_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoDecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codec_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codec_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_codec_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_codec_api_proto_goTypes,
		DependencyIndexes: file_codec_api_proto_depIdxs,
		MessageInfos:      file_codec_api_proto_msgTypes,
	}.Build()
	File_codec_api_proto = out.File
	file_codec_api_proto_rawDesc = nil
	file_codec_api_proto_goTypes = nil
	file_codec_api_proto_depIdxs = nil
}
