// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: online_api.proto

package ypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadOnlinePluginByScriptName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptName string `protobuf:"bytes,1,opt,name=ScriptName,proto3" json:"ScriptName,omitempty"`
	Id         int64  `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DownloadOnlinePluginByScriptName) Reset() {
	*x = DownloadOnlinePluginByScriptName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByScriptName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByScriptName) ProtoMessage() {}

func (x *DownloadOnlinePluginByScriptName) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByScriptName.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByScriptName) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadOnlinePluginByScriptName) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *DownloadOnlinePluginByScriptName) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DownloadOnlinePluginByScriptNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DownloadOnlinePluginByScriptName `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DownloadOnlinePluginByScriptNamesResponse) Reset() {
	*x = DownloadOnlinePluginByScriptNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByScriptNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByScriptNamesResponse) ProtoMessage() {}

func (x *DownloadOnlinePluginByScriptNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByScriptNamesResponse.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByScriptNamesResponse) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadOnlinePluginByScriptNamesResponse) GetData() []*DownloadOnlinePluginByScriptName {
	if x != nil {
		return x.Data
	}
	return nil
}

type DownloadOnlinePluginProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 进度
	Progress float64 `protobuf:"fixed64,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Log      string  `protobuf:"bytes,2,opt,name=Log,proto3" json:"Log,omitempty"`
}

func (x *DownloadOnlinePluginProgress) Reset() {
	*x = DownloadOnlinePluginProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginProgress) ProtoMessage() {}

func (x *DownloadOnlinePluginProgress) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginProgress.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginProgress) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadOnlinePluginProgress) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *DownloadOnlinePluginProgress) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type DownloadOnlinePluginByScriptNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptNames []string `protobuf:"bytes,1,rep,name=ScriptNames,proto3" json:"ScriptNames,omitempty"`
	Token       string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *DownloadOnlinePluginByScriptNamesRequest) Reset() {
	*x = DownloadOnlinePluginByScriptNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByScriptNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByScriptNamesRequest) ProtoMessage() {}

func (x *DownloadOnlinePluginByScriptNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByScriptNamesRequest.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByScriptNamesRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadOnlinePluginByScriptNamesRequest) GetScriptNames() []string {
	if x != nil {
		return x.ScriptNames
	}
	return nil
}

func (x *DownloadOnlinePluginByScriptNamesRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeleteLocalPluginsByWhereRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	UserId   int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *DeleteLocalPluginsByWhereRequest) Reset() {
	*x = DeleteLocalPluginsByWhereRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocalPluginsByWhereRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocalPluginsByWhereRequest) ProtoMessage() {}

func (x *DeleteLocalPluginsByWhereRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocalPluginsByWhereRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocalPluginsByWhereRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLocalPluginsByWhereRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DeleteLocalPluginsByWhereRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeleteLocalPluginsByWhereRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteLocalPluginsByWhereRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type TagsAndType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Total int32  `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *TagsAndType) Reset() {
	*x = TagsAndType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsAndType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsAndType) ProtoMessage() {}

func (x *TagsAndType) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsAndType.ProtoReflect.Descriptor instead.
func (*TagsAndType) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{5}
}

func (x *TagsAndType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TagsAndType) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetYakScriptTagsAndTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type []*TagsAndType `protobuf:"bytes,1,rep,name=Type,proto3" json:"Type,omitempty"`
	Tag  []*TagsAndType `protobuf:"bytes,2,rep,name=Tag,proto3" json:"Tag,omitempty"`
}

func (x *GetYakScriptTagsAndTypeResponse) Reset() {
	*x = GetYakScriptTagsAndTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYakScriptTagsAndTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYakScriptTagsAndTypeResponse) ProtoMessage() {}

func (x *GetYakScriptTagsAndTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYakScriptTagsAndTypeResponse.ProtoReflect.Descriptor instead.
func (*GetYakScriptTagsAndTypeResponse) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetYakScriptTagsAndTypeResponse) GetType() []*TagsAndType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GetYakScriptTagsAndTypeResponse) GetTag() []*TagsAndType {
	if x != nil {
		return x.Tag
	}
	return nil
}

type DeletePluginByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OnlineBaseUrl string `protobuf:"bytes,2,opt,name=OnlineBaseUrl,proto3" json:"OnlineBaseUrl,omitempty"`
}

func (x *DeletePluginByUserIDRequest) Reset() {
	*x = DeletePluginByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePluginByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginByUserIDRequest) ProtoMessage() {}

func (x *DeletePluginByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginByUserIDRequest.ProtoReflect.Descriptor instead.
func (*DeletePluginByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePluginByUserIDRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DeletePluginByUserIDRequest) GetOnlineBaseUrl() string {
	if x != nil {
		return x.OnlineBaseUrl
	}
	return ""
}

type DownloadOnlinePluginByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	BindMe     bool   `protobuf:"varint,2,opt,name=BindMe,proto3" json:"BindMe,omitempty"`
	Keywords   string `protobuf:"bytes,3,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	PluginType string `protobuf:"bytes,4,opt,name=PluginType,proto3" json:"PluginType,omitempty"`
	Status     string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	IsPrivate  string `protobuf:"bytes,6,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	Tags       string `protobuf:"bytes,7,opt,name=Tags,proto3" json:"Tags,omitempty"`
	UserName   string `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId     int64  `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TimeSearch string `protobuf:"bytes,10,opt,name=TimeSearch,proto3" json:"TimeSearch,omitempty"`
	Group      string `protobuf:"bytes,11,opt,name=Group,proto3" json:"Group,omitempty"`
}

func (x *DownloadOnlinePluginByTokenRequest) Reset() {
	*x = DownloadOnlinePluginByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByTokenRequest) ProtoMessage() {}

func (x *DownloadOnlinePluginByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByTokenRequest.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByTokenRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{8}
}

func (x *DownloadOnlinePluginByTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetBindMe() bool {
	if x != nil {
		return x.BindMe
	}
	return false
}

func (x *DownloadOnlinePluginByTokenRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetPluginType() string {
	if x != nil {
		return x.PluginType
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetIsPrivate() string {
	if x != nil {
		return x.IsPrivate
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DownloadOnlinePluginByTokenRequest) GetTimeSearch() string {
	if x != nil {
		return x.TimeSearch
	}
	return ""
}

func (x *DownloadOnlinePluginByTokenRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type DownloadOnlinePluginByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineIDs []int64  `protobuf:"varint,1,rep,packed,name=OnlineIDs,proto3" json:"OnlineIDs,omitempty"`
	Token     string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	UUID      []string `protobuf:"bytes,3,rep,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *DownloadOnlinePluginByIdsRequest) Reset() {
	*x = DownloadOnlinePluginByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByIdsRequest) ProtoMessage() {}

func (x *DownloadOnlinePluginByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByIdsRequest.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByIdsRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadOnlinePluginByIdsRequest) GetOnlineIDs() []int64 {
	if x != nil {
		return x.OnlineIDs
	}
	return nil
}

func (x *DownloadOnlinePluginByIdsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DownloadOnlinePluginByIdsRequest) GetUUID() []string {
	if x != nil {
		return x.UUID
	}
	return nil
}

type DownloadOnlinePluginByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineID int64  `protobuf:"varint,1,opt,name=OnlineID,proto3" json:"OnlineID,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	UUID     string `protobuf:"bytes,3,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *DownloadOnlinePluginByIdRequest) Reset() {
	*x = DownloadOnlinePluginByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadOnlinePluginByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadOnlinePluginByIdRequest) ProtoMessage() {}

func (x *DownloadOnlinePluginByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadOnlinePluginByIdRequest.ProtoReflect.Descriptor instead.
func (*DownloadOnlinePluginByIdRequest) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadOnlinePluginByIdRequest) GetOnlineID() int64 {
	if x != nil {
		return x.OnlineID
	}
	return 0
}

func (x *DownloadOnlinePluginByIdRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DownloadOnlinePluginByIdRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type OnlineProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseUrl   string `protobuf:"bytes,1,opt,name=BaseUrl,proto3" json:"BaseUrl,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Proxy     string `protobuf:"bytes,3,opt,name=Proxy,proto3" json:"Proxy,omitempty"`
	IsCompany bool   `protobuf:"varint,4,opt,name=IsCompany,proto3" json:"IsCompany,omitempty"`
}

func (x *OnlineProfile) Reset() {
	*x = OnlineProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_online_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineProfile) ProtoMessage() {}

func (x *OnlineProfile) ProtoReflect() protoreflect.Message {
	mi := &file_online_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineProfile.ProtoReflect.Descriptor instead.
func (*OnlineProfile) Descriptor() ([]byte, []int) {
	return file_online_api_proto_rawDescGZIP(), []int{11}
}

func (x *OnlineProfile) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *OnlineProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *OnlineProfile) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

func (x *OnlineProfile) GetIsCompany() bool {
	if x != nil {
		return x.IsCompany
	}
	return false
}

var File_online_api_proto protoreflect.FileDescriptor

var file_online_api_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x79, 0x70, 0x62, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x66,
	0x0a, 0x29, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x70, 0x62, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x1c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4c, 0x6f, 0x67, 0x22, 0x62, 0x0a, 0x28, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x42,
	0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x39, 0x0a, 0x0b, 0x54, 0x61, 0x67, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x59, 0x61, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x79, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x41, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x5b, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xc2, 0x02, 0x0a, 0x22, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x49, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x6a, 0x0a, 0x20, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x1f, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x22, 0x79, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x32, 0x93, 0x06, 0x0a, 0x09,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x70, 0x69, 0x12, 0x32, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0a, 0x2e,
	0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x79, 0x70, 0x62, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e,
	0x79, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4e, 0x0a, 0x19, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x79,
	0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x67, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x27, 0x2e, 0x79, 0x70, 0x62,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x59, 0x61, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x2e, 0x79, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x59, 0x61, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x61, 0x67, 0x73, 0x41, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x42, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x25, 0x2e, 0x79, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x42, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x82, 0x01, 0x0a,
	0x21, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2d, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x3b, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_online_api_proto_rawDescOnce sync.Once
	file_online_api_proto_rawDescData = file_online_api_proto_rawDesc
)

func file_online_api_proto_rawDescGZIP() []byte {
	file_online_api_proto_rawDescOnce.Do(func() {
		file_online_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_online_api_proto_rawDescData)
	})
	return file_online_api_proto_rawDescData
}

var file_online_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_online_api_proto_goTypes = []interface{}{
	(*DownloadOnlinePluginByScriptName)(nil),          // 0: ypb.DownloadOnlinePluginByScriptName
	(*DownloadOnlinePluginByScriptNamesResponse)(nil), // 1: ypb.DownloadOnlinePluginByScriptNamesResponse
	(*DownloadOnlinePluginProgress)(nil),              // 2: ypb.DownloadOnlinePluginProgress
	(*DownloadOnlinePluginByScriptNamesRequest)(nil),  // 3: ypb.DownloadOnlinePluginByScriptNamesRequest
	(*DeleteLocalPluginsByWhereRequest)(nil),          // 4: ypb.DeleteLocalPluginsByWhereRequest
	(*TagsAndType)(nil),                               // 5: ypb.TagsAndType
	(*GetYakScriptTagsAndTypeResponse)(nil),           // 6: ypb.GetYakScriptTagsAndTypeResponse
	(*DeletePluginByUserIDRequest)(nil),               // 7: ypb.DeletePluginByUserIDRequest
	(*DownloadOnlinePluginByTokenRequest)(nil),        // 8: ypb.DownloadOnlinePluginByTokenRequest
	(*DownloadOnlinePluginByIdsRequest)(nil),          // 9: ypb.DownloadOnlinePluginByIdsRequest
	(*DownloadOnlinePluginByIdRequest)(nil),           // 10: ypb.DownloadOnlinePluginByIdRequest
	(*OnlineProfile)(nil),                             // 11: ypb.OnlineProfile
	(*Empty)(nil),                                     // 12: ypb.Empty
}
var file_online_api_proto_depIdxs = []int32{
	0,  // 0: ypb.DownloadOnlinePluginByScriptNamesResponse.Data:type_name -> ypb.DownloadOnlinePluginByScriptName
	5,  // 1: ypb.GetYakScriptTagsAndTypeResponse.Type:type_name -> ypb.TagsAndType
	5,  // 2: ypb.GetYakScriptTagsAndTypeResponse.Tag:type_name -> ypb.TagsAndType
	12, // 3: ypb.OnlineApi.GetOnlineProfile:input_type -> ypb.Empty
	11, // 4: ypb.OnlineApi.SetOnlineProfile:input_type -> ypb.OnlineProfile
	10, // 5: ypb.OnlineApi.DownloadOnlinePluginById:input_type -> ypb.DownloadOnlinePluginByIdRequest
	9,  // 6: ypb.OnlineApi.DownloadOnlinePluginByIds:input_type -> ypb.DownloadOnlinePluginByIdsRequest
	8,  // 7: ypb.OnlineApi.DownloadOnlinePluginAll:input_type -> ypb.DownloadOnlinePluginByTokenRequest
	7,  // 8: ypb.OnlineApi.DeletePluginByUserID:input_type -> ypb.DeletePluginByUserIDRequest
	12, // 9: ypb.OnlineApi.DeleteAllLocalPlugins:input_type -> ypb.Empty
	12, // 10: ypb.OnlineApi.GetYakScriptTagsAndType:input_type -> ypb.Empty
	4,  // 11: ypb.OnlineApi.DeleteLocalPluginsByWhere:input_type -> ypb.DeleteLocalPluginsByWhereRequest
	3,  // 12: ypb.OnlineApi.DownloadOnlinePluginByScriptNames:input_type -> ypb.DownloadOnlinePluginByScriptNamesRequest
	11, // 13: ypb.OnlineApi.GetOnlineProfile:output_type -> ypb.OnlineProfile
	12, // 14: ypb.OnlineApi.SetOnlineProfile:output_type -> ypb.Empty
	12, // 15: ypb.OnlineApi.DownloadOnlinePluginById:output_type -> ypb.Empty
	12, // 16: ypb.OnlineApi.DownloadOnlinePluginByIds:output_type -> ypb.Empty
	2,  // 17: ypb.OnlineApi.DownloadOnlinePluginAll:output_type -> ypb.DownloadOnlinePluginProgress
	12, // 18: ypb.OnlineApi.DeletePluginByUserID:output_type -> ypb.Empty
	12, // 19: ypb.OnlineApi.DeleteAllLocalPlugins:output_type -> ypb.Empty
	6,  // 20: ypb.OnlineApi.GetYakScriptTagsAndType:output_type -> ypb.GetYakScriptTagsAndTypeResponse
	12, // 21: ypb.OnlineApi.DeleteLocalPluginsByWhere:output_type -> ypb.Empty
	1,  // 22: ypb.OnlineApi.DownloadOnlinePluginByScriptNames:output_type -> ypb.DownloadOnlinePluginByScriptNamesResponse
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_online_api_proto_init() }
func file_online_api_proto_init() {
	if File_online_api_proto != nil {
		return
	}
	file_message_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_online_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByScriptName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByScriptNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByScriptNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocalPluginsByWhereRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsAndType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYakScriptTagsAndTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePluginByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadOnlinePluginByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_online_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_online_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_online_api_proto_goTypes,
		DependencyIndexes: file_online_api_proto_depIdxs,
		MessageInfos:      file_online_api_proto_msgTypes,
	}.Build()
	File_online_api_proto = out.File
	file_online_api_proto_rawDesc = nil
	file_online_api_proto_goTypes = nil
	file_online_api_proto_depIdxs = nil
}
