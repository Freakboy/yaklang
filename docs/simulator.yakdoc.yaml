name: simulator
functions:
- name: simulator.HttpBruteForce
  type_str: 'func (v1: string, v2 ...func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) return(chan httpbrute.Result, error) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  - name: v2
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]httpbrute.BruteConfigOpt'
    is_variadic: true
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: chan httpbrute.Result
  - name: r1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: error
- name: simulator.captchaImgSelector
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.captchaInputSelector
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.captchaMode
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.captchaUrl
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.exePath
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.extraWaitLoadTime
  type_str: 'func (v1: int) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: int
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.leaklessStatus
  type_str: 'func (v1: config.LeaklessMode) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: config.LeaklessMode
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.loginDetectMode
  type_str: 'func (v1: httpbrute.loginDetectMode, v2 ...float64) return(func BruteConfigOpt(v1:
    *httpbrute.BruteConfig) ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: httpbrute.loginDetectMode
  - name: v2
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]float64'
    is_variadic: true
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.password
  type_str: 'func (v1 ...string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]string'
    is_variadic: true
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.passwordList
  type_str: 'func (v1: []string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]string'
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.passwordSelector
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.proxy
  type_str: 'func (v1: string, v2 ...string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  - name: v2
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]string'
    is_variadic: true
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.submitButtonSelector
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.username
  type_str: 'func (v1 ...string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]string'
    is_variadic: true
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.usernameList
  type_str: 'func (v1: []string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: '[]string'
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.usernameSelector
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
- name: simulator.wsAddress
  type_str: 'func (v1: string) return(func BruteConfigOpt(v1: *httpbrute.BruteConfig)
    ) '
  long_description: ""
  description: ""
  params:
  - name: v1
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: string
  returns:
  - name: r0
    param_alias: ""
    type_alias: ""
    description: ""
    type_str: 'func BruteConfigOpt(v1: *httpbrute.BruteConfig) '
variables:
- name: simulator.defaultChangeMode
  typestr: httpbrute.loginDetectMode
  valueverbose: ""
  description: //
- name: simulator.htmlChangeMode
  typestr: httpbrute.loginDetectMode
  valueverbose: ""
  description: //
- name: simulator.leaklessDefault
  typestr: config.LeaklessMode
  valueverbose: ""
  description: //
- name: simulator.leaklessOff
  typestr: config.LeaklessMode
  valueverbose: ""
  description: //
- name: simulator.leaklessOn
  typestr: config.LeaklessMode
  valueverbose: ""
  description: //
- name: simulator.simple
  typestr: map[string]interface {}
  valueverbose: 0xmap[626f64794d6f64696679546172676574:626f6479 626f64795265706c616365546172676574:626f64795265706c616365
    63726561746542726f77736572:1021635c0 686561646572734d6f64696679546172676574:68656164657273
    686561646c657373:102162fd0 686f73744d6f64696679546172676574:686f7374 6e6f53616e64426f78:102162f60
    70726f7879:102162db0 726571756573744d6f64696679:102163300 726573706f6e73654d6f64696679:102163040
    777341646472657373:102162cb0]
  description: //
- name: simulator.urlChangeMode
  typestr: httpbrute.loginDetectMode
  valueverbose: ""
  description: //
